%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Max Rudberg) ()%%Title: (installer-arrow.ai)%%CreationDate: 2009-03-10 10.37%%Canvassize: 16383%%BoundingBox: 10 10 19 19%%HiResBoundingBox: 10.3062 10.0615 18.4922 18.6499%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 15.5 14.5 15.5 14.5%AI3_TileBox: -291 -381 321 411%AI3_DocumentPreview: None%AI5_ArtSize: 30 30%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -43.9678 80.8955 7.7951 1178 940 18 0 0 281 96 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 124 128 8%%BeginData: 13642 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD27FFFD2C27F852FD4EFF27F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F827202727%FD4EFF272720272727202727272027272720272727202727272027272720%2727272027272720272727202727272027F852FD4EFF4BF827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F82727FD4EFFFD2C272052FD4EFF52F827F8272027F8272027%F8272027F8272027F8272027F8272027F8272027F8272027F8272027F827%2027F82727FD4EFFFD042720272727202727272027272720272727202727%272027272720272727202727272027272720272727F852FD4EFF27F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F82727FD4EFFFD2C27F852FD4EFF27F8272027F827%2027F8272027F8272027F8272027F8272027F8272027F8272027F8272027%F8272027F827202727FD4EFF272720272727202727272027272720272727%2027272720272727202727272027272720272727202727272027F852FD4E%FF4BF827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F82727FD4EFFFD2C272052FD4EFF52F8%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F82727FD4EFFFD042720272727202727272027%272720272727202727272027272720272727202727272027272720272727%F852FD4EFF27F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F82727FD4EFFFD2C27F852FD%4EFF27F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F827202727FD4EFF272720272727202727%272027272720272727202727272027272720272727202727272027272720%2727272027F852FD4EFF4BF827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F82727FD4EFFFD%2C272052FD4EFF52F827F8272027F8272027F8272027F8272027F8272027%F8272027F8272027F8272027F8272027F8272027F82727FD4EFFFD042720%272727202727272027272720272727202727272027272720272727202727%272027272720272727F852FD4EFF27F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F82727%FD4EFFFD2C27F852FD4EFF27F8272027F8272027F8272027F8272027F827%2027F8272027F8272027F8272027F8272027F8272027F827202727FD4EFF%272720272727202727272027272720272727202727272027272720272727%2027272720272727202727272027F852FD4EFF4BF827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F82727FD4EFFFD2C272052FD4EFF52F827F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%2727FD4EFFFD042720272727202727272027272720272727202727272027%272720272727202727272027272720272727F852FD4EFF27F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F82727FD4EFFFD2C27F852FD4EFF27F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F827202727FD4EFF272720272727202727272027272720272727202727%2720272727202727272027272720272727202727272027F852FD4EFF4BF8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F82727FD4EFFFD2C272052FD4EFF52F827F827%2027F8272027F8272027F8272027F8272027F8272027F8272027F8272027%F8272027F8272027F82727FD4EFFFD042720272727202727272027272720%272727202727272027272720272727202727272027272720272727F852FD%4EFF27F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F82727FD4EFFFD2C27F852FD4EFF27%F8272027F8272027F8272027F8272027F8272027F8272027F8272027F827%2027F8272027F8272027F827202727FD4EFF272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%2027F852FD4EFF4BF827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F82727FD4EFFFD2C2720%52FD4EFF52F827F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F82727FD4EFFFD042720272727%202727272027272720272727202727272027272720272727202727272027%272720272727F852FD4EFF27F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F82727FD4EFF%FD2C27F852FD4EFF27F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F827202727FD4EFF272720%272727202727272027272720272727202727272027272720272727202727%2720272727202727272027F852FD4EFF4BF827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%2727FD4EFFFD2C272052FD4EFF52F827F8272027F8272027F8272027F827%2027F8272027F8272027F8272027F8272027F8272027F8272027F82727FD%4EFFFD042720272727202727272027272720272727202727272027272720%272727202727272027272720272727F852FD4EFF27F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F82727FD4EFFFD2C27F852FD4EFF27F8272027F8272027F8272027%F8272027F8272027F8272027F8272027F8272027F8272027F8272027F827%202727FD4EFF272720272727202727272027272720272727202727272027%2727202727272027272720272727202727272027F852FD4EFF4BF827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F82727FD4EFFFD2C272052FD4EFF52F827F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F82727FD4EFFFD042720272727202727272027272720272727%202727272027272720272727202727272027272720272727F852FD4EFF27%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F82727FD4EFFFD2C27F852FD4EFF27F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F827202727FD4EFF272720272727202727272027272720%2727272027272720272727202727272027272720272727202727272027F8%52FD27FF7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D%527D7D7D527D7D7D527D7D7D5227F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827277D%527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D%7D7D527D7D7D527DA8F820F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F8FD2F27F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827A2FFA8%27272027F8272027F8272027F8272027F8272027F8272027F8272027F827%2027F8272027F8272027F8272027F8272027F8272027F8272027F8272027%F8272027F8272027F8272027F8272027F8272027F8272027F8272027F827%2027F8272027F8272027F8272027F8272027F8272027F8272027F827F827%A8FD04FFFD04272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%2720272727202727272027272720272727202727272027272720272727F8%52A8FD05FFA82727F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827A8FD08FFFD7027F852A8FD0AFF2720F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F852A8FD0CFF27272127272720272727202727272027272720%272727202727272027272720272727202727272027272720272727202727%272027272720272727202727272027272720272727202727272027272720%2727272027272720272727202727272027272720272727202727272027F8%52A8FD0EFF27F8F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F852A8FD10FFFD6827%F852FD13FF27272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F827F852A8FD14FFFD042720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%2727F852FD17FF2721F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F852A8FD18FFFD6027F852FD1BFF27%F8F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F852FD1DFF52272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%20272727202727272027F852FD1FFF27F8F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F852FD21FF52FD5727F87DFD23FF52%27F827F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F827F876FD25FF%522727272027272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727F87DFD27FF52%20F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F87DFD29FF7D2721FD%4D27F87DFD2BFF52F8F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F87DFD2DFF%7D27F8272727202727272027272720272727202727272027272720272727%202727272027272720272727202727272027272720272727202727272027%27272027272720272727202727272127F87DFD2FFF52F8F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F87DFD31FF7DFD4727F87DFD33FF5227F827F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F827F8%7DFD35FF7D27272720272727202727272027272720272727202727272027%272720272727202727272027272720272727202727272027272720272727%202727272027272720272727F87DFD37FF5227F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F87DFD39FF7D27%20FD3D27F87DFD3BFF7D20F8272027F8272027F8272027F8272027F82720%27F8272027F8272027F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F87DFD3DFF7D27F82727272027272720272727%202727272027272720272727202727272027272720272727202727272027%27272027272720272727202727272127F87DFD3FFF7D27F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F8A8FD41FFA12720FD3527%20A8FD43FF7D27F827F8272027F8272027F8272027F8272027F8272027F8%272027F8272027F8272027F8272027F8272027F8272027F8272027F827F8%A8FD45FFA827F82720272727202727272027272720272727202727272027%2727202727272027272720272727202727272027272720272727F8A8FD47%FF7D27F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F8A8FD49FFA827F8FD%2E27A8FD4BFFA827F8272027F8272027F8272027F8272027F8272027F827%2027F8272027F8272027F8272027F8272027F8272027F8A8FD4DFFA827F8%272727202727272027272720272727202727272027272720272727202727%272027272720272727212727A8FD4FFFA827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F820F8A8%FD51FFA827F8FD2627FD54FFA827F827F8272027F8272027F8272027F827%2027F8272027F8272027F8272027F8272027F82727A8FD55FFA827F82720%27272720272727202727272027272720272727202727272027272720FD04%27FD58FFA827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F82727A8FD59FFA827F8FD1E27FD5CFFA827F8272027F827%2027F8272027F8272027F8272027F8272027F827202027FD5FFF52F82727%272027272720272727202727272027272720272727202727FD60FFA84BF8%27F827F827F827F827F827F827F827F827F827F827F8F827FD63FF52F8FD%15274BFD64FFA852F827F8272027F8272027F8272027F8272027F82727FD%67FF52F827202727272027272720272727202727274BFD68FFA852F827F8%27F827F827F827F827F827F82027FD6BFF52F8FD0D2752FD6DFF52F82720%27F8272027F827F8F827FD6FFF52F827272720272727202752FD71FF52F8%27F827F827F8F84BFD73FF52F8FD052752FD75FF52F827F82752FD77FF52%F82752FD79FF5252FD3CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Copper Radial)(Copper Radial) 1 4 Bd[<000001010201020203030404050505060607070707080809090A0A0B0B0C0B0D0C0D0D0F0E1010111112121313141415151616171719191A1A1A1B1B1C1C1D1D1F1F2020212122222323242425252626272729282A><0B0C0B0D0E0F0F101113121314151516171818191A1B1B1C1D1E1E1F20212221232325242526282728292A2B2B2C2D2E2F2F30313332343536383739393B3C3C3D3E3F3F40424344444546474848494A4B4C4C4D4E><22222425262527282A2A2C2D2E2E3031323334353637393A3A3B3D3C3D3E3E404142434445464748494A4B4C4E4E4F50515354555658595A5B5C5E5F6061626364656668696A6B6B6D6E6F70717374757677797A7C>0.000031<FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6><F1F0F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D7D6D5D4D4D3D2D1D0D0CFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B6B6B5B4B3B2B2B1B0><DBDAD9D8D7D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89>4 %_Br<2A2B2A2C2D2D2E2F2F303132323334343536373738393A3A3B3B3B3C3D3E3D3E3F40404041424243444444454546454647464747484748484948494A4A4A4A4B4B4B4C4C4D4C4D4E4E4F4E4F4F504F4F50504F505050505051515151515251525252525252><4E4F50515152535455565758595A5B5D5D5D5E606162636465666869696A6B6C6D6E6F70717071727374767778787A7B7C7D7E7F8081828384858687888A8B8C8D8E8F9091929192939495969797999A9B9C9E9F9FA0A2A3A4A5A7A8A9A9ABACADAEAFB0B1><7C7D7E7F8180828384858687898A8B8C8E90919294959698999A999B9C9D9E9FA0A1A2A3A4A6A7A9AAABACACAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C2C3C4C5C6C7C8C9CBCCCDCECFD0D1D2D4D5D6D7D8D9DBDCDDDFE0E1E3E4E6E7E8EAECEDF0F2><000000000000000000000000000101010101010202020303030303040404050506060707080809090A0B0B0C0D0E0E0F1010111213131415161618191A1A1B1C1D1E1F202122232425262728292A2B2C2D2F2F3032333335363738393B3C3D3E3F41414244><D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A0A09F9E9D9D9C9B9A9A999897979695949493929191908F8E8E8D8C><B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150><89888786858584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827>4 %_Br<5252535353545454545455555556565656575757575858585858595958585858595959595A5A5A5B5B5B5B5C5C5C5D5D5D5E5E5F5F60606061><B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C3C4C5C6C7C8C8C9CBCECFD0D1D2D2D3D4D5D6D6D7D8D9DADBDCDDDDDEDFE0E0E1E2E3E3E4><F2F2F4F3F2F4F3F1F3F1EFF1EFEDEDECEBEDEDEDEFEEEDEEECEAEBE9E8E8E7E8E6E5E6E5E4E5E3E1E2E0DEDFDDDBDCDBDADBDAD8D9D7D5D6D4><44454648494A4C4D4F505253555658595A5C5D5F6062646567686A6C6C6E707173747677797B7D7E8082838587888A8B8D8E9091939596989A><8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655><504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817><27272626262525252424242323232222222121212020201F1F1F1E1E1E1D1D1C1C1C1B1B1B1A1A1A1919191818181717171616161515151414>4 %_Br[0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 %_BS%_0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 Bs0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 %_BS%_0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 Bs0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 %_BS%_0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 Bs0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 %_BS%_0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Desert Sunset)(Desert Sunset) 0 6 Bd[<393B3C3C3D3E3F414143444646474849494A4C4D4D4E4F4F505152525354545657575859595A5C5C5D5E5E5F606061616263636464656567686869696A6A6B6B6D6D6E6E6F6E706F707071717172727473737574767676777777777878787879797979><58595A5C5D5E5F60626364656768696A6C6B6C6E6F7071737475767677787A7B7C7E7E7F808283858485878889898B8C8E8D8F9091919394939596969799989A9B9B9C9E9D9F9EA0A2A2A3A3A4A4A6A5A7A7A8A8AAAAABABABACACACADADADAEAEAEAE><2E2F2E2F302F30313032333233343335353637363737373738373838393A393A393A3B3C3C3B3C3B3D3C3D3C3D3D3E3F3E4040413F41404141404141424143424343424343444444434344444345444445454446454546464645464645454746464646><00000000000000000000000000000000000000000000000000000000000000000101010101010101010101010202020202020203030303030404040404040505050505050606060707070707070808080808080909090A0A0A0A0B0B0B0B0B0B0B0B0B><C5C4C3C3C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9B9A9A999998989797969695959594949393939292919191909090908F8F8F8F8E8E8E8E><A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8E8D8C8B8A8988888786858483838281807F7F7E7D7C7C7B7A7979787777767575747373727171706F6F6E6E6D6C6C6B6B6A6A696968686767666665656564646463636362626262><B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A8A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C9B9B9A9A99999897979696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8B8A8A8A89898988888887878787868686868585858585>4 %_Br<202122232425262728292A2B2C2E2F30313233343637373839><4142434546474647484A4B4C4D4E4F50515252535454565758><52504F4D4D4A4B494846454340403E3D3B3A3838353432312E>0.000031<DEDDDCDBDAD9D8D7D6D5D4D3D2D0CFCECDCCCBCAC9C8C7C6C5><BDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7><A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4>4 %_Br<05060708090A0A0B0C0D0E0F10121314161718191A1B1C1C1C1D1F20><2C2D2E2E2F3031323332343536373738393A3A3B3C3D3D3E3F404041><7B7977777573716F6D6D6B6A686667656361615F5D5B5B5957545552>0.000031<F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFDE><D2D1D0D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBD><929394949596979899999A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7>4 %_Br<0303030303030403030304040404040404040404040404040505050505050506050505050505050606060606050505050505050505050506050505050505><7C7B79787876757472716F6E6D6B6A69676766646362605F5E5D5B5A595756545352514F4E4D4B4A494746444342403F3D3C3B39383736343332302F2E2C><9F9E9E9D9D9C9B9B9A999A989798979696959494939293929191908F8E8F8D8C8D8C8B8B8A8988898887878785848483828281807F7F7E7D7E7D7C7B7C7B>0.000031<F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8><9798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2><6869696A6A6B6C6C6D6E6E6F7070717272737474757676777878797A7B7B7C7D7D7E7F7F80818282838484858687878889898A8B8C8C8D8E8E8F90919192>4 %_Br<282727262626252423232221212020201F1E1D1D1C1B1B1A19191817161615141413121211100E0E0D0B0B0A09090807060605040403><9F9E9E9D9C9C9B9C9A999998979796959594939392939190908F8E8F8E8C8D8B8A8A89898887888685858382828180807F7F7E7D7D7C><F0EFEDEBEAE8E7E5E3E1DFDEDDDBD9D8D6D5D3D1D0CFCDCCCAC9C8C5C3C2C1BFBEBDBBBAB9B7B6B4B3B1AFAEACABA9A7A6A4A3A2A09F><070606060505050504040403030303030202020202020201010101010101010101000000000000000000000000000000000000000000><CECFCFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E9E9EAEBEBECEDEDEEEFF0F0F1F2F2F3><75767677787879797A7B7B7C7D7D7E7F7F8081818282838484858686878888898A8A8B8B8C8D8D8E8F8F909191929393949495969697><32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A5B5C5D5E5F606162636465666768>4 %_Br[0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 %_BS%_0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 Bs0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 %_BS%_0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 Bs0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 %_BS%_0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 Bs0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 %_BS%_0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 Bs0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 %_BS%_0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 Bs0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 %_BS%_0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient)(Radial Gradient) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A393736343332302F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB><404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B39393939393939393939393939393937373737373737363636363636363635353535353535353536363636353534343434343434343435353535353534343434343434343434343434343232323232323232323232323232323030303030303131313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828><1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818191818181818181818181818181616161515151515141413131313131212121212121212121111111110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505050504040403030303030303030303030302020202020101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><272727272726262626262626262625252525252525252524242424242424242323232323232323232222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A191919191919191918181818181818181817171717171717171716161616161616161615151515151515151514141414141414141313131313131313131212121212121212121111111111><6F6F6F6F6F6F6F6F70707070707070707070707070707071717171717171717171717171717172727272727272727272727272727273737373737373737373737373737374747474747474747474747474747475757575757575757575757575757676767676767676767676767676767777777777777777777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C>4 %_Br<C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCED0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF><3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A3839393838373838373836373836373636373636353637363637363635353634353434343333323334333332333433343333343334343334333435343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40><0001010101010101010101010101010202020202030303030303030304040405040505050505060606070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F1010101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D><2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A><9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827><B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A898988878786858584848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F>4 %_Br<DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCBCBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4><3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E><FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B><1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A09090909080808070707070606060605050504040404030303030302020202020201010101010101010101010000><1E1E1E1E1E1F1F1F1F1F1F1F1F1F20202020202020202121212121212121212222222222222222222323232323232323242424242424242424252525252525252525262626262626262627272727272727272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B><83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F90909090909191919191919292929292939393939394949494949495959595959696969696979797979797989898><4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3>4 %_Br<15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F909192939495969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3D4D5D5D5D6D6D7D8D8D9D9DADA><000001000101010102010202020203020302030303030403040404040304040404050405050505060607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B1C1B1C1C1D1D1E1E1F1F201F202020212122212222232324232524252526262726272728282929282A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A3A3B3B3C3C3D3D3D3D3E3E3F3F><F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFD><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010102020202020202020203030303030304030404040404040504050505050606060606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F10101111121213131414151516161717181819191A1A1C1B><F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E><E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A8989888887878686858584848383><282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F303030303030303030313131313131313132323232323232323233333333333333333434343434343434353535353535353535363636363636363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F40404040404040404141414141>4 %_Br<02020202020202020303030303030303030101010101010102020101010202020202020202020202020202020203030303030302030303030303030303030303030404040404040404040404040404050505050505050505050506060606060606070707070707070708080808090908080808080808090808080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F0F0F0F0F0F101010101010101010101011111111121212121212131212121313131313131414141414141515><FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A4847454442413F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B0908070504030100><F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFEFEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F1><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9><242424242424242424242424242424242424242424242424242425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252526262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272828282828282828282828282828282828282828282828282828>4 %_Br[0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<02020202020202020303030303030303030101010101010102020101010202020202020202020202020202020203030303030302030303030303030303030303030404040404040404040404040404050505050505050505050506060606060606070707070707070708080808090908080808080808090808080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F0F0F0F0F0F101010101010101010101011111111121212121212131212121313131313131414141414141515><FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A4847454442413F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B0908070504030100><F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFEFEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F1><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9><242424242424242424242424242424242424242424242424242425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252526262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272828282828282828282828282828282828282828282828282828>4 %_Br<15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F909192939495969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3D4D5D5D5D6D6D7D8D8D9D9DADA><000001000101010102010202020203020302030303030403040404040304040404050405050505060607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B1C1B1C1C1D1D1E1E1F1F201F202020212122212222232324232524252526262726272728282929282A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A3A3B3B3C3C3D3D3D3D3E3E3F3F><F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFD><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010102020202020202020203030303030304030404040404040504050505050606060606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F10101111121213131414151516161717181819191A1A1C1B><F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E><E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A8989888887878686858584848383><282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F303030303030303030313131313131313132323232323232323233333333333333333434343434343434353535353535353535363636363636363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F40404040404040404141414141>4 %_Br<DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCBCBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4><3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E><FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B><1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A09090909080808070707070606060605050504040404030303030302020202020201010101010101010101010000><1E1E1E1E1E1F1F1F1F1F1F1F1F1F20202020202020202121212121212121212222222222222222222323232323232323242424242424242424252525252525252525262626262626262627272727272727272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B><83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F90909090909191919191919292929292939393939394949494949495959595959696969696979797979797989898><4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3>4 %_Br<C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCED0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF><3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A3839393838373838373836373836373636373636353637363637363635353634353434343333323334333332333433343333343334343334333435343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40><0001010101010101010101010101010202020202030303030303030304040405040505050505060606070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F1010101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D><2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A><9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827><B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A898988878786858584848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F>4 %_Br<FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A393736343332302F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB><404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B39393939393939393939393939393937373737373737363636363636363635353535353535353536363636353534343434343434343435353535353534343434343434343434343434343232323232323232323232323232323030303030303131313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828><1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818191818181818181818181818181616161515151515141413131313131212121212121212121111111110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505050504040403030303030303030303030302020202020101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><272727272726262626262626262625252525252525252524242424242424242323232323232323232222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A191919191919191918181818181818181817171717171717171716161616161616161615151515151515151514141414141414141313131313131313131212121212121212121111111111><6F6F6F6F6F6F6F6F70707070707070707070707070707071717171717171717171717171717172727272727272727272727272727273737373737373737373737373737374747474747474747474747474747475757575757575757575757575757676767676767676767676767676767777777777777777777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C>4 %_Br[0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 Bs0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<050505050506060606060607070707070707070707070606060607070707070707070707070707070707070808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0A0A0A0A0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F10101010101010111111111111101010101010111111111111111111121212121212121212121212131313131313131313131313131313131313131414141414141414141414141414141414><E3E2E2E1E0DFDEDDDCDBDAD8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C6C5C4C3C3C2C1C0BFBDBCBBB9B9B8B7B5B4B3B1B1B0AEADACAAA9A9A7A6A5A3A3A2A09F9E9E9C9B9998989695939392908F8F8D8C8A8A898886868583838280807E7C7C7B79787876767573737270706F6D6D6C6C6A6969676766646463636161605E5E5D5D5C5C5A5A5959575756565454535352525250504F4F4D4D4D4C4C4B4B4B4949474747464646454545454343434242424240404040403F3F3F3F3F3F3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFCFCFCFCFCFDFDFDFDFDFDFDFDFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC><00000001010101010101000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED><42434445464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F6061616263646566676869696A6B6C6D6E6F6F7071727374757576777879797A7B7C7D7D7E7F808181828384848586878788898A8A8B8C8D8D8E8F8F9091919293939495969697979899999A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B0B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B8B9B9B9B9BABABABBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBE><24242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323>4 %_Br<15151414141414141313131414141313131312121212121211111111101010101111111111111111111010101010100F0F0F0F0F0E0F0F0F0F0F0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0C0B0B0B0B0B0A0A0A0A0A0A0A09090909090A0A0B0B0B0A0A0A0A09090909090909090908080808080909080808080807070707070606060606060606060707070707070706060606060606060606060605050606060606060505050505><00010304050708090B0C0D0E101113141617191B1C1E1F2122242527292A2C2D2E303233353638393B3C3D3F404243454648494B4C4D4E505153545657585A5B5D5E606163646667696A6B6D6E707173747677797A7C7D7F8182848687888A8B8C8E8F9192949597989A9B9D9EA0A1A2A4A5A7A8A9ABACADAFB0B1B3B4B5B7B8BABBBCBDBFC0C1C2C3C4C5C7C8C9CACBCCCDCFD0D0D1D2D3D4D5D6D7D9DADBDCDDDEDFE0E1E2E2E3><F1F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F1F1F0F0F0F1F1F2F2F3F3F5F5F5F6F6F6F6F6F6F7F7F7F8F8F8F8F8F9F9F8F8F9F8F8F8F8F8F8F8F7F7F8F8F8F8F8F8F8F8F8F8F8F8F7F7F8F8F8F8F9F9F9FAFAFAFBFBFCFCFCFDFDFEFEFDFDFDFDFDFDFCFCFBFDFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFDFDFDFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101000000><F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEA><E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474645444342><282828282828282828282828282828282828282828272727272727272727272727272727272727272727272727272727272727272727272727272727272727262626262626262626262626262626262626262626262626262626262626262626262626262626262626252525252525252525252525252525252525252525252525252525252525252525252525252525252525242424242424242424242424242424242424242424>4 %_Br<212122212121212120202020201F1F1F1F1F1E1F1F1F201E1E1E1E1E1E1D1E1E1E1F1D1E1E1E1E1D1D1D1D1D1C1D1D1D1E1C1D1D1D1D1C1C1C1C1C1B1C1C1C1C1B1B1B1B1C1B1B1B1B1B1C1A1B1B1B1B1A1A1A1A1A1919191A1A19191919191818181818171717171716171717171616171717161616171717161616161615161616161515151515141415><8684848381817F7E7E7C7B7B7978787674747371716F6E6E6C6C6B69696867676564646261615F5E5E5C5B5B595857565454535151504F4F4D4C4C4B49494846464544434241413F3F3D3C3C3B39393837373533333230302E2D2D2B2A292826262523232220201F1D1E1C1A1A19181816141413131210100F0E0E0C0B0B0A090907060605040402020100><1316181A1D1F2225272A2D2E313436393C3E414445484B4C4F515356585A5D5F616365686A6C6F70727577797C7E80828486898B8D8F90929497989A9D9EA0A2A3A5A7A8AAACADAFB0B2B4B5B7B8B9BABABCBDBEC0C2C3C4C5C6C7C8C9CACCCDCECFCFD0D1D3D4D5D6D7D8D9DADBDCDDDEDEDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9EBECECEDEEEFF0F0F1F1>0.000031<D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E5E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2><8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADADBDCDCDDDEDEDFE0E0E1E2E2E3E4E4E5E6E6E7E8E8E9><B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928>4 %_Br<C1C1C0C0BFC0BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9E9D9C9B9A99999897969594939291908F8E8D8C8C8B898887868584838281807F7E7D7C7B7A78787675747372706F6E6D6C6B6A6968676664636261605F5E5C5B5A59585755545352514F4E4D4C4B4948474645434241403E3D3C3B3A393736353332302F2E2D2C2A29282625242221><303030303133333333333434343435373737373737383838383A3A3B3B3B3B3B3C3C3E3E3E3F3F3F40404040424343434444444545454747484848494949494B4C4C4C4D4D4D4E4E4E505051515252525353535556565757585858595B5B5B5C5C5C5D5D5D5E606061616162626363636566666767676868696A6B6B6B6C6C6C6D6D6E6F707071717172727373757576767677777778797A7A7A7B7B7B7C7D7D7F8080808181818282828585858686><40404040403F3F3F3F3F3F3F3F3E3E3D3D3D3D3D3D3D3D3D3C3B3B3B3B3B3C3C3C3C3B3B3A3A3A3A3A3A3A3A38383838383838373737363636353535353534333332323232323231313030302F2F2F2F2F2E2E2D2D2D2C2C2E2E2D2D2C2B2B2B2B2B2B2A2A2A292928282828282727272525252525252525252323232322222222212120201F1F1F1E1E1E1D1D1C1B1B1B1B1C1C1C1C1A1A1A1A1A1919191918171716161616161515151413131313>0.000031<292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7><A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A999999999999999999999898989898989898989897979797979797979796969696969696969696959595959595959595959494949494949494949393939393939393939392929292929292929292919191919191919191909090909090909090908F8F8F8F8F8F8F8F8F8F8E8E8E8E8E><B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2>4 %_Br[0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 %_BS%_0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 Bs0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 %_BS%_0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 Bs0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 %_BS%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 Bs0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 %_BS%_0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 Bs0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 %_BS%_0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311114 %_Br[0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CDCDCECECFCFD0D0D0D1D1D1D2D3D3D3D4D4D5D5D5D5D6D6D6D7D7D7D8D8D8D8D8D8D9D9D9DADADADADBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCDCDCDBDBDBDADBDADADADADAD9D9D9D9D9D9D8D8D8D7D6D5D5D4D3D2D2D3D2D2D0D0CFCECDCCCBCACA><0A0B0D0E1012131516181A1B1C1E20212224252728292A2C2D2E2F30323334353638393A3B3C3D3E3F40414242434445464748494A4B4C4D4E4F5051525353545556575758595A5B5C5C5D5E5F5F606162636364656666676869696A6B6B6C6C6D6E6F7071727374757576767878797B7C7D7E7F80><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFAF6F6F3F3F1F0F0EFEEECE9E8E6E5E3E2E0><0000010101010101020202030303040404050506070808090A0B0B0C0D0E1011121314151718191A1B1D1E1F212223242627292A2C2D2F30323335383A3B3D3F4042444547494A4C4E4F51525456585A5C5E5F61636567696A6C6E70727476787A7C7E80828486888A8C8E90929496989A9C9EA0A2><1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919191919><ABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372716F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736><4B4B4A4A4949484848474746464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3B3A3A3939383838373736363535353434333333323231313030302F2F2E2E2D2D2D2C2C2B2B2A2A2A29292828282727262625252524242323222222212120201F1F1F1E1E1D1D1D1C1C1B1B1A1A>4 %_Br[0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 %_BS%_0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 Bs0.803433 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 %_BS%_0.803433 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fish Pattern)(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4303.5 4333.4351 m-4089.8999 4333.4351 L-4089.8999 4325.6343 L-4303.5 4325.6343 L-4303.5 4333.4351 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-4303.5 4329.5352 m-4293.4854 4332.0269 -4286.6865 4333.375 -4274.7007 4333.4351 c-4261.7188 4333.5 -4196.6997 4333.4351 y-4131.6816 4333.5 -4118.6997 4333.4351 v-4106.7124 4333.375 -4099.9136 4332.0269 -4089.8999 4329.5352 C-4099.9136 4327.0435 -4106.7124 4325.6953 -4118.6997 4325.6343 c-4131.6816 4325.5688 -4196.6997 4325.6343 y-4261.7188 4325.5688 -4274.7007 4325.6343 v-4286.6865 4325.6953 -4293.4854 4327.0435 -4303.5 4329.5352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8176 8206 m-8078.2451 8206 L-8078.2451 8185.2842 L-8176 8185.2842 L-8176 8206 Ln0 O0 g1 XR-8078.5586 8201.3184 m-8093.8247 8187.5303 -8111.5537 8208.4492 -8126.9277 8196.166 C-8125.4199 8190.5137 -8119.7598 8197.4678 -8117.5176 8192.8213 C-8117.4341 8191.2207 -8120.6313 8192.7207 -8120.5127 8190.6006 C-8118.6245 8187.1914 -8113.8955 8187.6885 -8112.5664 8191.7373 C-8106.3115 8189.7676 -8099.7734 8183.8242 -8093.7847 8185.6172 C-8092.2671 8186.9678 -8093.0708 8188.1514 -8092.6211 8189.4277 C-8085.2871 8184.9922 -8076.4644 8194.1279 -8078.5586 8201.3184 Cf-8122.2842 8202.9326 m-8122.8247 8203.3086 -8121.9277 8204.4199 -8122.2529 8204.9082 C-8124.3237 8204.1563 -8126.6919 8200.0781 -8128.4731 8197.3105 C-8128.2632 8198.8398 -8129.6641 8200.1641 -8131.0781 8197.9326 C-8131.2383 8197.1152 -8130.3667 8196.8281 -8130.6729 8195.9365 C-8131.8306 8194.3682 -8132.8472 8195.8535 -8133.7798 8195.625 C-8134.3184 8194.8613 -8134.6143 8194.2188 -8134.6816 8193.6943 C-8128.5537 8190.874 -8121.9263 8202.6768 -8115.7456 8203.1025 C-8115.9048 8206.1152 -8119.8555 8207.8008 -8122.2842 8202.9326 Cfuu0 XR-8119.1602 8197.6602 m-8134.0142 8191.1201 -8155.4731 8195.3418 -8171.3687 8195.3193 c-8177.2988 8195.3125 -8166.8965 8195.3213 -8172.8267 8195.3262 cN0 O0 g-8116.8052 8196.4395 m-8134.1475 8189.2637 -8153.9341 8194.0557 -8172.0532 8193.9863 C-8172.8608 8194.873 -8173.6685 8195.7617 -8174.4751 8196.6475 C-8173.6973 8196.6475 -8172.9194 8196.6465 -8172.1421 8196.6533 C-8171.3345 8195.7656 -8170.5273 8194.8789 -8169.7202 8193.9922 C-8170.3516 8194.002 -8170.9844 8193.9951 -8171.6157 8193.9951 c-8173.3735 8193.998 -8177.9165 8196.6621 -8174.0376 8196.6572 c-8173.4063 8196.6572 -8172.7734 8196.6641 -8172.1421 8196.6533 c-8170.4155 8196.626 -8165.8184 8194.0234 -8169.7202 8193.9922 c-8170.4976 8193.9834 -8171.2759 8193.9863 -8172.0532 8193.9863 c-8173.8081 8193.9854 -8178.3574 8196.6328 -8174.4751 8196.6475 c-8157.1177 8196.7148 -8138.1025 8192.0137 -8121.5151 8198.8789 c-8120.1035 8199.4639 -8114.8081 8197.2666 -8116.8052 8196.4395 c-8116.8052 8196.4395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8158 8206 m-8176 8206 L-8176 8188 L-8158 8188 L-8158 8206 Lnuu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-8157.9658 8198.4375 m-8176 8198.4375 L-8176 8195.5625 L-8157.9658 8195.5625 L-8157.9658 8198.4375 L-8157.9658 8198.4375 LfUu0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-8157.9658 8197.7002 m-8174.5 8197.7002 L-8174.5 8196.3008 L-8157.9658 8196.3008 L-8157.9658 8197.7002 L-8157.9658 8197.7002 LfUu0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-8157.9658 8197.3125 m-8173.5 8197.3125 L-8173.5 8196.6865 L-8157.9658 8196.6865 L-8157.9658 8197.3125 L-8157.9658 8197.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8158 8206 m-8176 8206 L-8176 8188 L-8158 8188 L-8158 8206 Lnuu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-8158 8198.4375 m-8176 8198.4375 L-8176 8195.5625 L-8158 8195.5625 L-8158 8198.4375 L-8158 8198.4375 LfUu0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-8158 8197.7002 m-8176 8197.7002 L-8176 8196.3008 L-8158 8196.3008 L-8158 8197.7002 L-8158 8197.7002 LfUu0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-8158 8197.3125 m-8176 8197.3125 L-8176 8196.6865 L-8158 8196.6865 L-8158 8197.3125 L-8158 8197.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8175.8833 8205.9551 m-8084.0479 8205.9551 L-8084.0479 8201.6758 L-8175.8833 8201.6758 L-8175.8833 8205.9551 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-8175.6631 8203.2754 m-8176 8203.3418 -8175.4814 8203.5313 -8175.8833 8203.3887 C-8175.8379 8203.2705 -8175.7725 8203.1816 -8175.6631 8203.2754 Cf-8085.1675 8203.4414 m-8086.2524 8204.2041 -8087.6816 8203.4336 -8088.8701 8203.9199 C-8089.0098 8203.9521 -8088.8345 8203.502 -8089.1484 8203.6025 C-8090.3008 8204.1953 -8092.1162 8203.8418 -8093.5195 8203.3848 C-8093.4346 8203.2666 L-8093.7017 8203.1816 -8094.0283 8203.5723 -8094.3115 8203.5176 C-8094.3135 8203.4395 -8094.2207 8203.4063 -8094.2861 8203.2988 C-8094.3574 8203.5352 -8094.7983 8203.4082 -8094.9185 8203.584 C-8095.0303 8203.4922 -8095.0195 8203.3047 -8095.1641 8203.2012 C-8095.3262 8203.4697 L-8095.7769 8204.1094 -8096.4209 8203.4258 -8097.0361 8203.7559 C-8097.0063 8203.6934 -8096.9453 8203.6445 -8096.9941 8203.584 C-8097.9814 8203.9727 -8099.2168 8203.9004 -8100.3208 8204.043 C-8100.2769 8203.9482 -8100.2363 8203.7754 -8100.3008 8203.668 C-8100.3555 8203.9512 -8100.6963 8204.0225 -8100.9922 8204.0781 C-8101.1255 8203.7871 -8101.4995 8204.3438 -8101.8467 8204.1836 C-8101.8169 8204.1191 L-8102.0732 8204.4238 -8102.1973 8203.9434 -8102.4053 8204.3086 C-8102.5684 8204.0801 L-8102.6807 8204.4902 -8102.9395 8203.8672 -8103.1514 8204.0762 C-8103.1445 8204.1602 L-8103.3442 8204.2598 -8103.4482 8204.0537 -8103.6338 8204.123 C-8103.6514 8204.0762 L-8104.0854 8204.1836 -8104.3379 8203.9551 -8104.3271 8204.2754 C-8104.4795 8204.0186 -8103.9063 8204.1582 -8104.1455 8203.7852 C-8105.5732 8204.1152 -8107.0459 8204.0508 -8108.4834 8204.0566 C-8108.6465 8203.9277 -8108.7505 8203.8887 -8108.7871 8203.7676 C-8108.9307 8203.832 -8109.3281 8203.8262 -8109.4585 8203.9902 C-8109.4102 8203.9834 -8109.5513 8203.8262 -8109.6274 8203.8105 C-8109.8887 8203.6895 -8109.9131 8204.1621 -8110.2002 8204.0186 C-8110.0859 8203.9336 -8110.0469 8203.8301 -8110.0854 8203.7109 C-8110.3301 8203.9609 -8110.6577 8203.9209 -8110.9473 8204.002 C-8110.9023 8203.9482 -8110.8325 8203.916 -8110.8433 8203.8154 C-8111.1602 8204.0986 -8111.4209 8203.7559 -8111.6982 8203.9346 C-8111.5947 8203.75 L-8112.0415 8203.5254 -8111.7266 8204.1367 -8112.1128 8204.0039 C-8112.02 8203.9453 -8112.0527 8203.873 -8112.0361 8203.7979 C-8112.3965 8204.1338 -8112.9795 8204.0225 -8113.3389 8204.1367 C-8113.3174 8204.1113 -8113.3232 8204.0605 Y-8113.7148 8204.1025 -8114.1245 8203.998 -8114.5552 8204.1445 C-8114.7119 8204.0625 -8114.5039 8203.6934 -8114.9185 8203.7617 C-8114.9033 8204.1328 -8115.6221 8203.9141 -8115.3779 8204.334 C-8115.7319 8204.2734 -8116.2925 8204.1338 -8116.5283 8204.2598 C-8116.3691 8204.1191 -8116.7007 8203.8066 -8116.4063 8203.7754 C-8116.6289 8203.5498 L-8116.5957 8203.3984 -8116.3999 8203.6016 -8116.4707 8203.4102 C-8116.6182 8203.4258 -8117.0479 8203.5723 -8117.1797 8203.5117 C-8117.4531 8203.7393 -8117.7041 8204.1641 -8118.1465 8204.2109 C-8117.9385 8204.0664 -8118.2646 8203.8018 -8118.1235 8203.7383 C-8118.7407 8204.4492 L-8118.8877 8204.4668 -8118.7725 8204.1563 -8118.9854 8204.2529 C-8118.9746 8204.3516 -8119.0674 8204.4121 -8119.1318 8204.4922 C-8119.1875 8204.4492 -8119.7441 8204.584 -8119.8081 8204.2188 C-8119.8735 8204.0762 -8119.5684 8204.1426 -8119.7314 8204.0117 C-8120.0029 8204.0156 -8120.0151 8204.1406 -8120.2871 8204.1465 C-8120.2925 8204.0977 L-8120.4717 8204.043 -8120.8213 8204.2529 -8120.6265 8204.4551 C-8120.5015 8204.4668 -8120.6738 8204.2354 -8120.4888 8204.3418 C-8120.6152 8204.5537 -8120.9312 8204.6133 -8121.2031 8204.6172 C-8121.1104 8204.5586 -8121.1216 8204.4609 -8121.0845 8204.3574 C-8121.4497 8204.6445 -8121.8369 8204.7354 -8122.2451 8204.8555 C-8122.2515 8205.0293 -8122.0928 8204.5391 -8122.0327 8204.6309 C-8122.5557 8204.3896 -8123.1128 8204.9727 -8123.5479 8204.6201 C-8123.4766 8204.5898 -8123.5098 8204.8672 -8123.5146 8204.8184 C-8123.7666 8204.7969 -8123.7549 8204.5449 -8123.9189 8204.6377 C-8123.9355 8204.4902 -8124.1255 8204.6855 -8124.2944 8204.7305 C-8124.3818 8204.8369 -8124.3384 8204.6582 -8124.1914 8204.6426 C-8124.4268 8204.7676 -8125.3691 8204.9941 -8125.9131 8204.7793 C-8125.9023 8204.877 -8126.2471 8205.1377 -8126.3721 8205.127 C-8126.3232 8204.8984 L-8126.4375 8204.7617 -8126.7422 8204.918 -8126.7632 8204.7227 C-8127.0303 8205 -8125.7344 8204.4863 -8126.0957 8204.7002 C-8126.1895 8204.5098 -8126.5991 8205.0645 -8126.5215 8204.7529 C-8126.7725 8204.7617 -8127.0161 8205.0186 -8127.2559 8204.8047 C-8127.1865 8204.8418 -8127.0522 8204.4873 -8127.2549 8204.5039 C-8127.6123 8204.5449 -8127.3564 8204.6133 -8127.6465 8204.6895 C-8127.8281 8204.7832 L-8127.8398 8205.0059 -8128.1475 8204.7529 -8128.0146 8205.002 C-8128.0586 8204.8184 -8128.5337 8205.1152 -8128.4971 8204.7461 C-8128.4473 8204.4551 L-8128.6016 8204.4766 -8128.7002 8204.7617 -8128.8213 8204.8896 C-8128.8418 8204.8633 -8128.8823 8204.8047 -8128.8745 8204.7578 C-8128.8994 8205.2031 -8129.2432 8204.7207 -8129.4268 8205.0645 C-8129.7505 8204.9102 -8130.2495 8205.0508 -8130.4023 8204.7734 C-8130.6514 8204.9082 -8130.8784 8205.0684 -8131.1621 8204.9727 C-8131.1055 8204.9307 -8131.0283 8204.918 -8131.0122 8204.8223 C-8131.1904 8204.6914 -8131.2344 8204.8086 -8131.3975 8204.8809 C-8131.3608 8204.8145 -8131.7539 8204.6201 -8131.9521 8204.4629 C-8132.1992 8204.5957 -8132.1143 8204.8359 -8132.1392 8204.9824 C-8132.3652 8204.543 -8132.8379 8205.2656 -8133.1211 8204.8672 C-8133.0352 8204.8066 -8132.7598 8204.6514 -8132.9658 8204.541 C-8133.1919 8204.1025 -8133.4219 8204.8652 -8133.7861 8204.6543 C-8133.6968 8205.0186 L-8133.8594 8204.793 -8134.2334 8205.2305 -8134.1963 8204.8594 C-8134.3184 8204.9902 -8134.6265 8204.7383 -8134.5859 8205.0938 C-8135.1846 8204.793 -8136.0425 8205.2754 -8136.4102 8204.6377 C-8136.4961 8204.6973 -8136.7104 8204.6367 -8136.6665 8204.8193 C-8136.5239 8205.0176 -8136.4673 8204.6777 -8136.4141 8204.8125 C-8136.4912 8204.8232 -8136.5078 8204.9209 -8136.5161 8204.9697 C-8136.7021 8204.8887 -8136.8486 8204.8633 -8136.6729 8204.5674 C-8137.0869 8204.3477 -8137.1001 8205.1719 -8137.6274 8205.0332 C-8137.6035 8204.8857 -8137.6436 8204.8301 -8137.7979 8204.8535 C-8138.0903 8205.1055 L-8138.4312 8205.0469 -8138.2842 8204.7705 -8138.2925 8204.5215 C-8138.4746 8204.5645 -8138.6973 8204.5527 -8138.7803 8204.7383 C-8139.0015 8204.4258 L-8138.8398 8204.6514 -8139.1514 8204.5762 -8139.2368 8204.6367 C-8139.1514 8204.5762 L-8139.1846 8204.4697 -8139.3955 8204.5352 -8139.5024 8204.5664 C-8139.4766 8204.7207 -8139.2617 8204.7832 -8139.1445 8204.8281 C-8139.2373 8204.9375 -8139.3823 8204.9121 -8139.5059 8205.041 C-8139.4648 8204.7969 -8139.8027 8204.8672 -8139.9473 8204.8418 C-8140.1133 8204.7891 -8140.1348 8205.0605 -8140.1831 8205.0527 C-8140.1875 8204.9258 -8140.4541 8205.0313 -8140.3247 8204.8535 C-8140.2681 8204.8125 -8140.1953 8204.9766 -8140.1016 8204.8652 C-8140.2109 8204.7705 -8140.1982 8204.5498 -8140.4258 8204.7109 C-8140.5967 8204.832 -8140.3818 8205.1934 -8140.7061 8205.0391 C-8140.6211 8204.9785 -8140.6055 8204.8809 -8140.5391 8204.793 C-8140.8433 8204.666 L-8140.8564 8204.8887 L-8140.8975 8204.832 -8140.8691 8204.8125 -8140.8877 8204.7832 C-8140.9785 8205.0176 -8141.3521 8204.8555 -8141.4209 8205.1191 C-8141.5742 8205.1426 -8141.7441 8204.9648 -8141.8906 8204.9395 C-8141.8623 8204.9199 L-8142.0415 8204.7891 -8142.2793 8204.875 -8142.4297 8205.0254 C-8142.4219 8204.9766 L-8142.5195 8204.959 -8142.7505 8204.9941 -8142.8735 8205.125 C-8143.1201 8204.957 -8142.9561 8204.2842 -8143.2295 8204.5645 C-8143.48 8204.5723 -8143.6221 8204.9727 -8143.5215 8205.1152 C-8143.9717 8204.9648 -8144.4834 8205.3281 -8144.9009 8204.9824 C-8144.9658 8205.0723 -8144.9248 8205.1289 -8145.0586 8205.1816 C-8145.7197 8205.0938 -8146.4551 8205.4453 -8146.9814 8205.0078 C-8146.79 8204.9141 -8146.9688 8204.7852 -8146.9727 8204.6582 C-8147.1309 8204.8574 -8147.1631 8204.4512 -8147.2197 8204.793 C-8147.2041 8204.9941 -8147.2197 8205.0918 -8147.0337 8205.1729 C-8147.4282 8205.2813 -8148.0283 8205.2813 -8148.2471 8205.0938 C-8148.1377 8205.1865 -8148.2227 8205.248 -8148.3086 8205.3086 C-8148.2803 8204.9873 -8148.5713 8204.9395 -8148.7915 8205.0527 C-8148.8223 8205.248 L-8148.9658 8205.0469 L-8149.0503 8205.1094 -8149.0591 8205.457 -8149.2773 8205.2695 C-8149.2891 8205.1934 -8149.3018 8205.1162 -8149.3418 8205.0605 C-8149.5693 8205.2207 -8149.8906 8205.4922 -8150.1377 8205.3262 C-8150.3398 8205.041 L-8150.4453 8205.0723 -8150.6235 8205.2441 -8150.4375 8205.3262 C-8150.8594 8205.1543 -8151.1309 8205.1328 -8151.2646 8204.8857 C-8151.9912 8205.4873 -8153.0459 8205.5117 -8153.8906 8205.4688 C-8153.8652 8205.3223 L-8154.0923 8205.1855 -8153.9834 8205.5781 -8154.1416 8205.4766 C-8154.0684 8205.3369 -8154.3145 8205.1729 -8154.1362 8205.002 C-8154.4609 8204.8477 -8154.5547 8205.2559 -8154.7656 8205.3223 C-8154.7979 8205.5146 -8154.5957 8205.1992 -8154.6367 8205.4434 C-8154.6729 8205.5117 -8155.0859 8205.293 -8155.1362 8205.584 C-8155.2178 8205.4697 -8155.1543 8205.2559 -8155.1104 8205.1377 C-8155.3086 8205.2793 L-8155.5513 8204.9395 -8154.7559 8204.6719 -8155.0107 8204.2529 C-8155.1934 8204.2988 L-8155.3682 8203.9941 -8154.71 8203.9551 -8155.1689 8203.8506 C-8155.3682 8203.9941 -8155.5381 8204.416 -8155.3608 8204.5449 C-8155.7754 8204.625 -8155.5527 8205.2383 -8155.9985 8205.2139 C-8156.1201 8205.043 -8155.6416 8205.1729 -8155.7275 8204.9336 C-8155.9375 8204.6992 -8156.1484 8205.0645 -8156.3354 8204.9824 C-8156.1279 8205.0918 -8156.3032 8205.3857 -8156.4375 8205.4395 C-8156.6641 8205.3018 -8156.29 8205.1641 -8156.6113 8205.1338 C-8156.6641 8205.3018 -8156.9595 8205.4277 -8156.7041 8205.5449 C-8156.8203 8205.9258 -8157.0381 8205.4395 -8157.2129 8205.7344 C-8157.3174 8205.4668 -8156.8823 8205.1152 -8157.2354 8204.9814 C-8157.1792 8205.2393 -8157.6704 8205.332 -8157.4839 8205.7148 C-8157.6221 8205.6406 -8157.6367 8205.4375 -8157.5361 8205.2793 C-8157.7334 8205.1201 -8158.0151 8205.75 -8158.0801 8205.2383 C-8158.1479 8205.502 L-8158.21 8205.416 -8158.2983 8205.3516 -8158.3994 8205.209 C-8158.5732 8205.2041 -8158.96 8205.5664 -8158.9443 8205.168 C-8159 8205.209 -8159.3975 8205.1914 -8159.2441 8205.4668 C-8158.9971 8205.6348 -8158.96 8205.2656 -8158.8223 8205.6377 C-8158.9971 8205.334 -8159.1787 8205.6777 -8159.3213 8205.7793 C-8159.3447 8205.625 L-8159.4297 8205.6855 -8159.6255 8205.6514 -8159.6787 8205.8184 C-8159.6133 8205.7305 -8159.6475 8205.625 -8159.7148 8205.5879 C-8159.8042 8205.8223 L-8160.1494 8205.9395 -8159.8857 8205.4102 -8160.2217 8205.4785 C-8159.9663 8205.2969 L-8160.0225 8205.3359 -8160.1367 8205.1162 -8160.2979 8205.1895 C-8160.3604 8205.4033 -8160.4775 8205.6602 -8160.5313 8205.8262 C-8160.7207 8205.9199 -8160.6162 8205.585 -8160.8027 8205.8047 C-8160.5586 8205.5469 L-8160.5215 8205.4766 -8160.7231 8205.1934 -8160.9761 8205.1992 C-8161.1377 8205.2734 -8161.3887 8205.582 -8161.1338 8205.6992 C-8161.2607 8205.7031 -8161.4385 8205.5723 -8161.3379 8205.416 C-8161.6255 8205.4902 -8161.2998 8205.6465 -8161.5479 8205.7793 C-8161.6494 8205.6367 -8161.9658 8205.4336 -8162.1563 8205.2266 C-8161.8975 8204.8682 L-8162.0693 8204.8652 L-8161.8467 8204.5781 -8162.1826 8204.6465 -8162.0566 8204.3438 C-8162.1743 8204.2969 -8162.3169 8204.3994 -8162.4307 8204.4785 C-8162.0864 8204.9629 -8162.8159 8205.1406 -8162.7158 8205.582 C-8163.1875 8205.7031 -8163.0107 8204.5078 -8163.5024 8205.1992 C-8163.4219 8205.3145 -8163.6533 8205.6504 -8163.3564 8205.5225 C-8163.6494 8205.4746 -8163.5557 8205.9658 -8163.9014 8205.7832 C-8163.6455 8205.6016 -8164.1763 8205.3359 -8163.8066 8205.0723 C-8163.8311 8205.2188 -8163.6001 8205.1836 -8163.5435 8205.1426 C-8163.6641 8204.9727 -8163.5186 8204.6973 -8163.8184 8204.6973 C-8164.0015 8204.7393 -8164.2524 8204.748 -8164.2158 8204.9785 C-8164.2085 8205.2314 -8163.9365 8204.9512 -8164.0537 8205.207 C-8164.4185 8205.2949 -8164.4795 8204.9102 -8164.6304 8205.3594 C-8164.3999 8205.3232 -8164.3423 8205.584 -8164.3467 8205.7578 C-8164.6143 8205.8633 L-8164.5625 8205.6953 L-8164.9922 8205.5742 -8164.6895 8206 -8165.1055 8205.9551 C-8165.3008 8205.623 L-8165.2017 8205.3369 -8164.6953 8205.75 -8164.7695 8205.2842 C-8165.04 8205.2656 -8165.1299 8205.502 -8165.3848 8205.3818 C-8165.3281 8205.3418 -8165.2505 8205.3301 -8165.1943 8205.2891 C-8165.2915 8205.2734 -8165.3877 8204.6563 -8165.7734 8205.0176 C-8165.9727 8205.1582 -8165.8262 8205.1836 -8165.8311 8205.3574 C-8166.2656 8205.4102 -8166.3955 8205.5879 -8166.6753 8205.6152 C-8166.6177 8205.2754 -8167.1699 8205.582 -8166.8608 8205.2344 C-8166.7188 8205.4336 -8166.0903 8205.4141 -8165.9365 8205.0898 C-8166.0947 8204.6865 -8165.5952 8205.1465 -8165.5024 8204.7383 C-8165.8506 8204.7285 -8165.8335 8204.332 -8165.8896 8204.0723 C-8165.9863 8204.0537 -8166.0801 8204.1641 -8166.1377 8204.2041 C-8166.1787 8204.4492 -8166.0522 8204.4453 -8166.0449 8204.6973 C-8166.4336 8204.6309 -8166.8081 8204.7676 -8167.0225 8205.0059 C-8167.1523 8204.8848 -8167.1113 8204.6406 -8166.9575 8204.6172 C-8167.4199 8204.6895 -8167.9141 8204.6563 -8168.3535 8204.582 C-8168.0693 8204.9814 -8168.8433 8204.6758 -8168.6494 8205.0078 C-8168.4141 8205.0977 -8168.2119 8205.3818 -8168.3418 8205.5605 C-8168.4888 8205.5352 -8168.3369 8205.3857 -8168.3984 8205.3008 C-8168.5859 8205.5186 -8168.6895 8204.9512 -8168.8735 8205.2949 C-8168.4512 8205.166 -8168.7915 8204.8086 -8168.7139 8204.4961 C-8169.0186 8204.6719 -8168.7007 8204.2734 -8169.0024 8204.2734 C-8169.3057 8204.4473 -8169.6787 8204.584 -8170.0161 8204.6514 C-8170.4399 8204.3555 -8171.0898 8204.6465 -8171.4683 8204.6582 C-8171.6665 8204.5 -8171.5322 8204.1465 -8171.7471 8204.085 C-8171.9995 8204.0918 -8171.5601 8204.4668 -8171.9336 8204.3047 C-8171.8975 8204.2344 L-8172.0107 8204.3164 -8172.5825 8203.9941 -8172.6929 8204.502 C-8172.5776 8204.1191 L-8172.6475 8204.084 -8172.7119 8204.1719 -8172.7695 8204.2129 C-8172.7725 8204.0879 -8172.8535 8203.9746 -8172.7402 8203.8926 C-8172.9707 8203.6289 -8173.2241 8203.9346 -8173.4746 8203.9453 C-8173.3135 8204.1719 L-8173.7422 8204.3496 -8174.0293 8204.125 -8174.4443 8204.2041 C-8174.4316 8203.9824 L-8174.6787 8204.1152 L-8174.6182 8203.9004 -8174.8447 8203.7617 -8174.9751 8203.9414 C-8174.3335 8203.3984 L-8174.1553 8203.5293 -8174.5283 8203.666 -8174.4165 8203.8848 C-8174.3213 8204.0762 -8173.9375 8204.0156 -8173.8755 8203.8018 C-8174.0225 8203.7773 -8174.0293 8203.8262 -8174.1436 8203.9063 C-8174.1919 8203.5977 -8173.9688 8203.6094 -8173.8584 8203.4033 C-8173.9355 8203.416 -8174.0449 8203.3223 -8174.0615 8203.4199 C-8173.9102 8203.2695 -8173.7578 8203.2461 -8173.5059 8203.2383 C-8173.6763 8203.3594 -8173.4131 8203.4297 -8173.4775 8203.5176 C-8173.4575 8203.2461 -8173.2168 8203.1621 -8172.9053 8203.2383 C-8172.6831 8203.5527 -8172.3208 8203.0361 -8171.96 8203.123 C-8172.1064 8203.3984 -8172.2935 8203.6191 -8172.5127 8203.7305 C-8172.2861 8203.8682 -8172.2607 8203.7227 -8172.0337 8203.8613 C-8171.9238 8203.6563 -8171.8457 8203.3418 -8171.5503 8203.2168 C-8171.5342 8203.4199 L-8171.2666 8203.3164 -8171.2666 8203.0156 -8170.9258 8203.0723 C-8170.3418 8203.1719 -8169.7407 8203.1719 -8169.2949 8203.1973 C-8169.2783 8203.3994 L-8169.0303 8202.9658 -8168.4521 8203.2393 -8168.1182 8203.0469 C-8167.5503 8203.2422 -8166.8848 8202.8535 -8166.5938 8203.2031 C-8165.5913 8203.0469 -8164.7148 8202.8945 -8163.6768 8202.9688 C-8163.8516 8203.2637 L-8163.6655 8203.0469 -8163.7305 8203.4336 -8163.5479 8203.3896 C-8163.7578 8203.1543 -8163.2949 8203.084 -8163.1665 8202.9033 C-8162.7041 8203.1328 -8162.1104 8202.8828 -8161.7007 8202.6758 C-8161.6846 8202.8789 L-8161.2705 8202.498 -8160.7759 8202.832 -8160.2598 8202.8945 C-8160.2007 8202.9785 -8160.1074 8203.1689 -8159.9536 8203.1465 C-8159.6738 8202.8184 -8159.5273 8202.8418 -8159.1167 8202.6367 C-8158.8169 8202.6367 -8158.3301 8202.7178 -8158.0254 8202.8457 C-8156.8975 8202.3848 -8155.7456 8202.6797 -8154.5732 8202.4023 C-8154.4888 8202.6406 L-8153.3521 8202.1309 -8151.9541 8202.5938 -8150.9839 8202.332 C-8151.0776 8202.7393 L-8150.7734 8202.8652 -8150.3843 8202.6328 -8150.4619 8202.3438 C-8150.1567 8202.4688 -8149.7007 8202.1465 -8149.5068 8202.4814 C-8149.1953 8202.5566 -8149.1255 8202.293 -8148.8662 8202.2383 C-8148.2422 8202.3926 -8148.0107 8202.3574 -8147.4224 8202.2813 C-8147.5684 8202.2559 L-8147.6328 8202.3457 -8147.6387 8202.5186 -8147.4922 8202.5449 C-8147.2725 8202.4316 -8146.6846 8202.6543 -8146.9033 8202.168 C-8146.2754 8202.4492 -8145.4385 8201.9395 -8144.8271 8202.3184 C-8144.8789 8202.1855 -8144.7246 8202.1602 -8144.6602 8202.0703 C-8144.1089 8202.0645 -8143.5293 8202.3359 -8143.0898 8202.1094 C-8143.0024 8202.1758 -8143.2295 8202.3359 -8143.0049 8202.3496 C-8142.8721 8202.2988 -8143.0024 8202.1758 -8142.8384 8202.1016 C-8141.9453 8201.8535 -8141.0303 8202.3574 -8140.2188 8202.293 C-8138.7754 8202.0361 -8137.2695 8202.166 -8135.8867 8202.123 C-8135.9023 8202.2207 L-8135.4395 8201.8477 -8134.8159 8202.6025 -8134.4463 8202.041 C-8134.3369 8202.1338 -8134.0283 8202.085 -8134.1094 8202.2734 C-8133.7407 8202.0098 -8133.0771 8202.5215 -8132.5439 8202.1865 C-8132.5928 8202.1777 -8132.6211 8202.1973 -8132.6777 8202.2393 C-8132.1392 8202.4551 -8131.6641 8202.1602 -8131.0957 8202.3555 C-8131.1533 8202.3975 -8131.2583 8202.4277 -8131.2754 8202.5254 C-8131.0557 8202.7129 -8130.7549 8202.1133 -8130.6348 8202.584 C-8130.5088 8202.5801 -8130.5449 8202.3477 -8130.6221 8202.3613 C-8129.3779 8202.5449 -8128.0498 8202.2441 -8126.7549 8202.1367 C-8125.8271 8202.418 -8126.6982 8202.9297 -8125.9663 8202.5781 C-8125.9063 8202.6689 -8125.9229 8202.3984 -8125.9131 8202.4961 C-8125.6299 8202.3643 -8125.4717 8203.0215 -8125.2754 8202.7754 C-8125.3564 8202.4863 -8125.1445 8202.6133 -8125.1387 8202.4375 C-8124.5713 8202.625 -8124.4575 8202.8857 -8124.0098 8202.666 C-8124.0435 8202.8184 L-8123.5186 8202.3887 -8122.9102 8202.6191 -8122.4673 8202.123 C-8119.5728 8202.0332 -8116.7983 8201.7578 -8113.9761 8201.7002 C-8111.1865 8201.7949 -8108.4551 8201.5723 -8105.6221 8201.8359 C-8104.9585 8202.2354 -8104.9087 8202.2246 -8104.1797 8202.0625 C-8104.2095 8202.127 -8104.2549 8202.1426 -8104.2061 8202.2031 C-8104.1699 8201.875 -8103.6929 8202.1719 -8103.6235 8201.8594 C-8102.5762 8201.9199 -8101.6113 8201.8301 -8100.5337 8201.8281 C-8100.7041 8201.8633 -8100.7896 8202.1309 -8100.5869 8202.1094 C-8100.3755 8201.9004 L-8100.3408 8201.9922 L-8100.2021 8201.9434 -8100.0513 8201.7813 -8100.1943 8201.6758 C-8097.4873 8201.3926 -8094.8242 8202.0508 -8092.1729 8201.9697 C-8091.5435 8202.1064 -8090.6475 8201.9814 -8089.9629 8201.9141 C-8087.9355 8202.3516 -8086.1079 8202.7041 -8084.0479 8202.3984 C-8084.3169 8203.2461 -8085.1675 8203.4414 Vf-8175.2578 8203.2422 m-8175.1855 8203.4063 -8174.9497 8203.4961 -8175.1377 8203.7148 C-8175.1611 8203.5605 -8175.2822 8203.3887 -8175.2578 8203.2422 Cf-8168.9619 8204.9297 m-8168.9536 8204.8809 -8168.8721 8204.9961 -8168.8521 8205.0225 C-8168.9297 8205.0352 -8169.0024 8205.1729 -8169.0645 8205.0879 C-8168.9854 8205.0762 -8168.9976 8204.998 -8168.9619 8204.9297 Cf-8167.3521 8205.0273 m-8167.3765 8205.1729 -8167.7207 8205.2891 -8167.9238 8205.3066 C-8167.3521 8205.0273 Lf-8165.8521 8205.6289 m-8165.7227 8205.752 -8165.7583 8205.8193 -8165.9326 8205.8154 C-8165.9453 8205.7383 -8165.8877 8205.6992 -8165.8521 8205.6289 Cf-8165.7456 8205.2969 m-8165.6211 8205.293 -8165.5591 8205.3789 -8165.4985 8205.4629 C-8165.5029 8205.3369 -8165.7871 8205.541 -8165.7456 8205.2969 Cf-8162.4893 8205.7207 m-8162.4111 8205.709 -8162.2417 8205.5879 -8162.1689 8205.75 C-8162.2505 8205.6367 -8162.5498 8205.9346 -8162.4893 8205.7207 Cf-8160.9761 8205.5 m-8160.9272 8205.5098 -8160.9072 8205.5361 -8160.8506 8205.4961 C-8160.7607 8205.5625 -8160.8555 8205.6689 -8160.9312 8205.6826 C-8160.9761 8205.5 Lf-8133.4287 8204.9141 m-8133.5923 8204.9863 L-8133.5684 8204.8418 L-8133.4287 8204.9141 Lf-8121.3574 8204.9063 m-8121.1943 8204.8145 -8121.2441 8205.043 -8121.2168 8205.0645 C-8121.3643 8205.0801 -8121.1621 8204.8848 -8121.3574 8204.9063 Cf-8114.8486 8204.1777 m-8114.8984 8204.1816 L-8114.8818 8203.8828 L-8114.8486 8204.1777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8158 8206 m-8176 8206 L-8176 8188 L-8158 8188 L-8158 8206 Lnuu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-8165.5625 8206 m-8168.4375 8206 L-8168.4375 8197.5 L-8168.4375 8196.4316 -8167.5684 8195.5625 -8166.5 8195.5625 C-8157.9165 8195.5625 L-8157.9165 8198.4375 L-8165.5625 8198.4375 L-8165.5625 8206 L-8165.5625 8206 LfUu0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-8166.2998 8206 m-8167.7002 8206 L-8167.7002 8197.5 L-8167.7002 8196.8389 -8167.1621 8196.3008 -8166.5 8196.3008 C-8157.9165 8196.3008 L-8157.9165 8197.7002 L-8166.2998 8197.7002 L-8166.2998 8206 L-8166.2998 8206 LfUu0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-8166.6875 8206 m-8167.3125 8206 L-8167.3125 8197.5 L-8167.3125 8197.0527 -8166.9482 8196.6865 -8166.5 8196.6865 C-8157.9165 8196.6865 L-8157.9165 8197.3125 L-8166.5 8197.3125 L-8166.6035 8197.3125 -8166.6875 8197.3975 -8166.6875 8197.5 C-8166.6875 8206 L-8166.6875 8206 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8149.9727 8206 m-8149.9727 8179.9717 L-8176 8179.9717 L-8176 8206 L-8149.9727 8206 Ln0 Ap0 R0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA1.125 w-8176 8188.6465 m-8149.9727 8188.6465 lS0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA-8176 8197.3242 m-8149.9727 8197.3242 lS0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA0.375 w-8176 8192.9854 m-8149.9727 8192.9854 lS0 O0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 Xa1 w-8154.5742 8193.0117 m-8154.3442 8192.7402 -8154.6914 8192.4541 -8155 8192.2432 c-8155.1118 8192.166 -8155.5215 8192.3789 -8155.7466 8192.2129 c-8156.0439 8191.9951 -8156.1826 8191.9082 -8156.4824 8191.9141 c-8156.6455 8191.918 -8157.0435 8192.0479 -8157.1895 8192.0781 c-8157.5679 8192.1543 -8157.8022 8192.3516 -8158.3672 8192.2549 c-8158.7344 8192.1914 -8158.8286 8192.1006 -8158.9233 8192.1484 c-8159.1118 8192.29 -8159.2202 8192.5137 -8159.4258 8192.5625 c-8159.9575 8192.6895 -8160.3535 8192.7334 -8160.8818 8192.7227 c-8161.3047 8192.7129 -8162.4185 8192.7813 -8163.2866 8192.6816 c-8163.6226 8192.6416 -8163.6025 8192.2168 -8163.7695 8192.2129 c-8163.8618 8192.2109 -8163.7646 8192.5264 -8163.8306 8192.5469 c-8164.1694 8192.6533 -8164.4702 8191.5029 -8164.6943 8191.5723 c-8164.8047 8191.6074 -8164.5562 8192.1533 -8164.6729 8192.1816 c-8164.8975 8192.2373 -8165.2178 8191.2188 -8165.4321 8191.2813 c-8165.5635 8191.3184 -8165.2886 8191.7383 -8165.4375 8191.8066 c-8165.6655 8191.9111 -8165.9087 8191.0352 -8166.1064 8191.1338 C-8166.1543 8191.1816 -8165.7295 8191.9375 -8166.1685 8191.8789 c-8166.2871 8191.8613 -8166.5054 8191.3135 -8166.5801 8191.3398 c-8166.6919 8191.3799 -8166.3535 8191.8018 -8166.4897 8191.9277 C-8166.7681 8192.1543 -8167.3711 8191.1631 -8167.4575 8191.2344 c-8167.5791 8191.3359 -8167.1279 8192.0977 -8167.2695 8192.166 C-8167.4497 8192.4297 -8168.0142 8191.5527 -8168.0889 8191.6016 c-8168.1777 8191.6602 -8167.9058 8192.0381 -8167.8799 8192.2334 c-8167.8545 8192.4277 -8167.9966 8192.5615 -8168.2144 8192.5098 c-8168.4736 8192.4473 -8168.8696 8191.6416 -8168.9727 8191.7354 C-8169.0791 8191.791 -8168.8682 8192.0781 -8168.7954 8192.3125 c-8168.7583 8192.4277 -8168.8882 8192.6016 -8169.0298 8192.6016 c-8169.3135 8192.6494 -8169.6255 8191.998 -8169.7065 8192.1025 c-8169.7524 8192.1621 -8169.5898 8192.4902 -8169.7295 8192.5879 c-8169.8994 8192.7061 -8170.3115 8192.2383 -8170.4521 8192.293 C-8170.5361 8192.3418 -8170.4126 8192.5967 -8170.4927 8192.6533 c-8170.7295 8192.8193 -8171.0039 8192.4209 -8171.0513 8192.4688 C-8171.1167 8192.4912 -8171.1201 8192.5361 -8171.2793 8192.6406 c-8171.4736 8192.7676 -8171.5254 8192.8486 -8171.5425 8192.9648 c-8171.5654 8193.083 -8171.3135 8193.375 -8171.1655 8193.3496 c-8170.8223 8193.29 -8170.8662 8193.8496 -8170.6328 8193.7158 c-8170.5679 8193.6797 -8170.6592 8193.2588 -8170.4199 8193.2656 c-8170.0488 8193.2783 -8169.9858 8193.8213 -8169.7817 8193.8105 c-8169.6406 8193.8037 -8169.8521 8193.1836 -8169.6328 8193.2607 c-8169.4751 8193.3164 -8169.0063 8194.3018 -8168.9795 8194.21 c-8168.8975 8193.9424 -8169.0703 8193.3984 -8168.9409 8193.4082 c-8168.7568 8193.4229 -8168.5078 8194.3174 -8168.2544 8194.4375 c-8168.1826 8194.4727 -8168.3774 8193.6006 -8168.1958 8193.5967 C-8168.0898 8193.6465 -8167.7578 8194.4492 -8167.6274 8194.498 C-8167.5591 8194.4824 -8167.5879 8194.125 -8167.5176 8194.1045 c-8167.4688 8194.0898 -8167.2817 8194.5654 -8167.21 8194.5234 c-8167.1055 8194.4629 -8167.2471 8193.9922 -8167.0889 8193.9229 c-8166.9175 8193.8486 -8166.4878 8194.8926 -8166.3486 8194.7979 c-8166.2769 8194.75 -8166.3574 8194.21 -8166.21 8194.2461 c-8166.0718 8194.2783 -8165.9414 8194.6143 -8165.8081 8194.6426 c-8165.7295 8194.6582 -8165.7935 8194.1914 -8165.7495 8194.1738 c-8165.5889 8194.1152 -8165.2329 8194.6719 -8165.0688 8194.5234 c-8164.8584 8194.335 -8164.9395 8193.9697 -8164.8345 8193.9824 c-8164.6274 8194.0059 -8164.4912 8194.2432 -8164.4146 8194.1836 c-8164.2642 8194.0684 -8164.3281 8193.7793 -8164.0527 8193.6924 c-8163.8975 8193.6426 -8163.7935 8193.9346 -8163.7495 8193.9307 c-8163.6738 8193.9277 -8163.6782 8193.8301 -8163.6665 8193.7246 c-8163.6328 8193.4609 -8163.6064 8193.3994 -8163.4878 8193.377 c-8163.0854 8193.3535 -8162.5625 8193.2842 -8162.1807 8193.2754 c-8161.6274 8193.2607 -8160.2607 8193.2373 -8160.1182 8193.2373 c-8160 8193.2129 -8159.7432 8193.3945 -8159.6689 8193.4609 c-8159.4678 8193.6455 -8159.2998 8193.8594 -8158.9858 8194.1201 c-8158.8906 8194.2012 -8158.8081 8194.1807 -8158.7378 8194.1563 c-8158.5249 8194.085 -8158.4585 8194.0332 -8158.2202 8194.002 c-8157.9175 8193.959 -8157.4272 8194.0488 -8157.1245 8194.1426 c-8156.6035 8194.3018 -8156.5264 8194.3242 -8156.0977 8194.2754 c-8155.6992 8194.2295 -8155.0586 8194.1582 -8155.0479 8193.8105 c-8155.0415 8193.5957 -8154.9414 8193.4434 -8154.5742 8193.0117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8149.9722 8206 m-8149.9722 8179.9727 L-8176 8179.9727 L-8176 8206 L-8149.9722 8206 Ln0 Ap0 R0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA0.375 w-8158.6455 8192.9893 m-8149.9736 8192.9893 lS-8162.9839 8206 m-8162.9839 8197.3242 lS0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA1.125 w-8158.7202 8188.6504 m-8149.9727 8188.6504 lS-8167.3232 8205.999 m-8167.3232 8196.6455 lS0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA-8158.6504 8205.999 m-8158.6504 8203.5869 l-8155.9937 8203.3633 -8154.3096 8201.6602 v-8152.6064 8199.9336 -8152.3774 8197.3281 y-8149.9727 8197.3281 lS*u1 D0 O0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa1 w-8166.8418 8190.1855 m-8166.8418 8190.25 -8166.8218 8190.291 -8166.7783 8190.291 c-8166.6943 8190.291 -8166.4634 8189.9541 -8166.3994 8189.9541 c-8166.3154 8189.9541 -8166.2729 8189.9961 -8166.2729 8190.1016 c-8166.2729 8190.1855 -8166.5264 8191.0928 y-8166.5264 8191.1338 -8166.5264 8191.1338 -8166.5049 8191.1338 c-8166.4414 8191.1338 -8166.0615 8190.5869 -8165.9351 8190.5869 c-8165.9146 8190.5869 -8165.8936 8190.6074 -8165.8936 8190.6289 c-8166.1675 8191.5352 -8166.1675 8191.7256 v-8166.1675 8191.7891 -8166.1675 8191.8105 -8166.1465 8191.8105 c-8166.1055 8191.8105 -8165.6826 8191.2402 -8165.5562 8191.2402 c-8165.5352 8191.2402 -8165.5137 8191.2607 -8165.5137 8191.2822 c-8165.5137 8191.3457 -8165.7666 8192.084 -8165.7666 8192.252 c-8165.7666 8192.2949 -8165.7666 8192.2949 -8165.7446 8192.2949 c-8165.6826 8192.2949 -8165.4722 8192.084 -8165.4297 8192.084 c-8165.4082 8192.084 -8165.3882 8192.1055 -8165.3882 8192.126 c-8165.3882 8192.1465 -8165.4927 8192.5059 -8165.4927 8192.5898 c-8165.4927 8192.6113 -8165.4927 8192.6113 -8165.4722 8192.6113 c-8165.4297 8192.6113 -8165.0918 8192.252 -8165.0078 8192.252 c-8164.9658 8192.252 -8164.9233 8192.2949 -8164.9233 8192.3789 c-8164.9233 8192.5273 -8165.1138 8193.2441 -8165.1138 8193.2861 c-8165.1138 8193.3701 -8165.0918 8193.4121 -8165.0498 8193.4121 c-8164.9658 8193.4121 -8164.7119 8193.0957 -8164.6494 8193.0957 c-8164.5854 8193.0957 -8164.5439 8193.1162 -8164.5439 8193.1807 c-8164.5854 8193.6016 L-8164.5854 8193.666 -8164.5854 8193.6855 -8164.5654 8193.6855 c-8164.5225 8193.6855 -8164.2915 8193.3916 -8164.2065 8193.3916 c-8164.1006 8193.3916 -8164.1006 8193.877 -8164.1006 8193.9395 c-8164.1006 8194.0449 -8164.0166 8194.1289 -8163.8896 8194.1289 c-8163.8057 8194.1289 -8163.4678 8193.8975 -8163.4473 8193.8975 c-8163.3623 8193.8975 -8163.3198 8194.3398 -8163.2568 8194.3398 c-8163.1943 8194.3398 -8162.9199 8194.2129 -8162.8564 8194.2129 c-8162.6455 8194.2129 -8162.6035 8194.2988 -8162.6035 8194.4668 c-8162.6255 8194.6143 L-8162.6255 8194.6563 -8162.6035 8194.6563 -8162.5835 8194.6563 c-8162.4985 8194.6563 -8162.2241 8194.3818 -8162.1392 8194.3818 c-8161.9287 8194.3818 -8159.8198 8196.4492 -8159.5454 8196.7227 c-8159.3984 8196.8906 -8159.3984 8197.1865 -8159.3984 8197.3135 c-8159.3984 8198.1777 -8159.3984 8198.2617 -8159.2295 8198.3457 c-8158.5977 8198.5996 -8158.5127 8198.7471 -8157.7334 8200.0332 c-8157.6479 8200.1807 -8156.7407 8200.793 -8156.5942 8200.793 c-8156.4878 8200.793 -8156.1094 8200.5391 -8156.0239 8200.5391 c-8155.9194 8200.5391 -8155.8135 8200.6025 -8155.8135 8200.7705 c-8155.8135 8201.2139 -8156.3408 8201.7207 -8156.9312 8201.7207 c-8157.7534 8201.7207 -8158.0913 8201.0234 -8158.1338 8200.625 c-8158.1543 8200.4766 -8158.2393 8200.3916 -8158.3447 8200.3916 c-8158.3862 8200.3916 -8158.4287 8200.4121 -8158.4702 8200.4766 c-8158.9561 8201.2773 -8159.9473 8201.7207 -8160.7065 8201.7207 c-8161.7393 8201.7207 -8162.8774 8201.0879 -8163.3418 8200.8145 c-8163.7842 8200.5615 -8164.4814 8200.3916 -8164.8809 8200.3916 c-8165.3242 8200.3916 -8165.3662 8200.5391 -8165.3662 8200.793 c-8165.3662 8200.9404 -8164.9023 8201.3818 -8164.9023 8201.5098 c-8164.9023 8201.6357 -8165.0498 8201.7207 -8165.4082 8201.7207 c-8165.8936 8201.7207 -8166.5679 8201.0029 -8166.5679 8200.2236 c-8166.5679 8199.6113 -8165.7666 8199.085 -8165.3022 8199.085 c-8164.3755 8199.085 -8164.0942 8199.4434 -8163.5264 8199.9072 c-8163.4414 8199.9697 -8163.3774 8199.9922 -8163.3359 8199.9922 c-8163.1895 8199.9922 -8163.1895 8198.8945 -8163.1895 8198.7695 c-8163.1895 8198.6201 -8163.2729 8198.5576 -8163.3774 8198.5576 c-8165.7822 8198.5576 -8170.6592 8197.334 -8172.3672 8191.1777 c-8172.4297 8190.9658 -8172.5361 8190.8613 -8172.6406 8190.8613 c-8172.7881 8190.8613 -8173.7793 8191.7041 -8173.7793 8193.2861 c-8173.7793 8195.1201 -8172.5767 8196.0898 -8171.9873 8196.0898 c-8171.8398 8196.0898 -8171.6494 8196.0693 -8171.6494 8195.9209 c-8171.6494 8195.8584 -8171.6929 8195.7949 -8171.7759 8195.6895 c-8172.1143 8195.3535 -8172.3672 8194.7197 -8172.3672 8194.4033 c-8172.3672 8194.1914 -8172.2607 8194.0234 -8172.1143 8194.0234 c-8171.9033 8194.0234 -8171.5654 8194.9727 -8171.46 8195.1201 c-8171.3335 8195.3311 -8170.9546 8195.7109 -8170.2378 8196.2383 c-8169.4995 8196.7637 -8168.0654 8198.0723 -8168.0654 8199.3369 c-8168.0654 8200.709 -8169.1191 8201.6152 -8169.9209 8201.6152 c-8170.7007 8201.6152 -8171.6714 8201.0879 -8172.0713 8200.6025 c-8172.7041 8199.8652 -8173.3154 8199.2949 -8173.8218 8199.2949 c-8174.1592 8199.2949 -8174.3066 8199.5059 -8174.3066 8199.7168 c-8174.3066 8200.0537 -8174.0537 8200.2861 -8173.5479 8200.3281 c-8172.9575 8200.3711 -8172.8936 8200.793 -8172.8936 8201.1289 c-8172.8936 8201.4033 -8173.4209 8201.7207 -8173.8433 8201.7207 c-8174.4751 8201.7207 -8175.2974 8201.0234 -8175.2974 8199.1904 c-8175.2974 8197.6924 -8174.0537 8197.2295 -8173.5679 8197.2295 c-8173.1265 8197.2295 -8172.4722 8197.3135 -8172.0928 8197.6504 c-8170.8066 8198.8535 -8170.1318 8199.0625 -8169.5835 8199.0625 c-8169.3721 8199.0625 -8169.2881 8199.0625 -8169.2881 8199.2109 c-8169.2881 8199.5273 -8170.0474 8199.7168 -8170.1318 8199.7383 c-8170.3423 8199.8008 -8170.5103 8200.0332 -8170.5103 8200.2441 c-8170.5103 8200.7295 -8170.2378 8200.75 -8169.8774 8200.75 c-8169.5215 8200.75 -8168.8042 8200.3916 -8168.8042 8199.1904 c-8168.8042 8198.1992 -8169.9424 8197.0391 -8170.4058 8196.8076 c-8170.7007 8196.6377 -8171.5874 8196.6602 -8171.9458 8196.6172 c-8172.6406 8196.5322 -8174.4121 8195.585 -8174.4121 8193.0957 c-8174.4336 8191.6826 -8173.1265 8190.3555 -8172.8511 8190.166 c-8172.6826 8190.0586 -8172.5986 8189.9326 -8172.5986 8189.7637 c-8172.5986 8189.5527 -8172.6626 8186.6221 -8172.9995 8186.6221 c-8173.4424 8186.6221 -8173.5054 8186.6221 -8173.5054 8186.8135 c-8173.21 8187.9082 -8173.21 8188.1406 v-8173.21 8188.457 -8173.4424 8189.9326 -8174.3066 8189.9326 c-8174.5806 8189.9326 -8175.0449 8189.7002 -8175.0449 8189.3848 c-8175.0449 8189.0898 -8174.3486 8187.8877 -8174.3486 8187.6133 c-8174.3486 8187.1279 -8174.3921 8187.1074 -8175.0654 8186.4961 c-8175.2559 8186.3486 -8175.3193 8186.2227 -8175.3193 8186.0313 c-8175.3193 8185.8633 -8175.2134 8185.7354 -8175.0449 8185.7354 c-8174.8975 8185.7354 -8174.3281 8186.0117 -8174.2017 8186.0313 c-8174.0752 8186.0313 -8173.8433 8186.0527 -8173.6538 8186.0527 c-8173.2734 8186.0527 -8173.0845 8185.9258 -8173.0845 8185.7998 c-8173.0845 8185.5674 -8173.0845 8184.8936 -8173.9263 8183.4375 c-8174.1167 8183.1006 -8175.2974 8181.7725 -8175.2974 8181.4346 c-8175.2974 8181.2656 -8175.2134 8181.2461 -8175.1089 8181.2461 c-8174.9185 8181.2461 -8174.4966 8181.667 -8174.3706 8181.8145 c-8173.1265 8183.1426 -8172.3042 8184.5762 -8171.9238 8185.8418 c-8171.8398 8186.1582 -8171.7344 8186.0742 -8171.5654 8186.0957 c-8169.4155 8186.6016 -8167.3271 8189.1104 -8167.3271 8189.1318 c-8167.4326 8189.4053 -8167.4326 8189.4688 v-8167.4326 8189.5957 -8167.3271 8189.6172 -8167.3057 8189.6172 c-8167.2432 8189.6172 -8167.0527 8189.4053 -8167.0103 8189.4053 c-8166.9058 8189.4053 -8166.7783 8189.4902 -8166.7783 8189.6377 C-8166.8418 8190.1855 lf0 D-8170.1104 8188.6895 m-8169.5215 8188.6895 -8169.0986 8188.7949 -8168.6982 8189.0684 c-8168.6553 8189.0898 -8168.6138 8189.1104 -8168.5928 8189.1104 c-8168.5498 8189.1104 -8168.5498 8189.0898 -8168.5498 8189.0469 c-8168.5498 8188.626 -8170.4272 8186.666 -8171.5654 8186.666 c-8171.6289 8186.666 -8171.6714 8186.707 -8171.6714 8186.7695 c-8171.6714 8186.96 -8171.5874 8188.9629 -8171.2495 8188.9629 c-8171.1865 8188.9629 -8171.1016 8188.9414 -8171.0386 8188.9004 c-8170.7007 8188.752 -8170.4902 8188.6895 -8170.1104 8188.6895 cf-8169.5835 8191.4512 m-8169.5835 8191.0293 -8169.5625 8190.5654 -8168.8662 8190.5654 c-8168.2334 8190.5654 -8167.6431 8191.2197 -8167.4961 8191.3672 c-8167.4326 8191.4092 -8167.3906 8191.4297 -8167.3486 8191.4297 c-8167.3271 8191.4297 -8167.2847 8191.3877 -8167.2847 8191.3457 c-8167.2847 8190.9023 -8168.6553 8189.2373 -8170.0049 8189.2373 c-8170.2578 8189.2373 -8171.2705 8189.4053 -8171.2705 8189.9541 c-8171.2705 8190.207 -8170.8906 8191.5781 -8170.2793 8192.6533 c-8168.9087 8195.1416 -8164.7119 8196.7002 -8162.8145 8196.7002 c-8161.9072 8196.7227 -8161.6118 8196.4063 -8161.4863 8196.3848 c-8161.4648 8196.3848 -8161.4438 8196.3643 -8161.4233 8196.3643 c-8161.3174 8196.3643 -8161.1904 8196.4277 -8161.1904 8196.5752 c-8161.1904 8196.5967 -8161.2119 8196.5967 v-8161.3594 8197.7344 -8161.4014 8198.1357 -8161.4014 8199.3994 c-8161.4014 8200.793 -8161.4014 8200.9189 -8160.4321 8200.9189 c-8159.1455 8200.9189 -8158.8506 8199.8438 -8158.8506 8199.6113 c-8158.8506 8199.1904 -8159.4399 8198.8945 -8159.5889 8198.8945 c-8159.7358 8198.8945 -8159.9058 8199.002 -8159.9058 8199.1904 c-8159.9058 8199.4854 -8159.9473 8199.6328 -8160.2207 8199.6328 c-8160.4951 8199.6328 -8160.4951 8199.2744 -8160.4951 8199.168 c-8160.4951 8198.916 -8160.3896 8198.6631 -8160.1782 8198.5361 c-8159.7998 8198.2832 -8159.7998 8197.8828 -8159.7998 8197.6719 c-8159.7998 8197.5664 -8159.7998 8197.4395 -8159.8198 8197.334 c-8159.8418 8197.166 -8161.7817 8195.1201 -8162.0977 8195.1201 c-8162.2446 8195.1201 -8162.5615 8195.2666 -8163.4258 8195.2666 c-8165.5767 8195.2666 -8166.5474 8193.5391 -8166.7378 8193.0117 c-8166.9897 8192.2949 -8167.7915 8191.999 -8168.0225 8191.999 c-8168.2129 8191.999 -8168.2129 8192.042 -8168.2129 8192.4424 c-8168.2129 8192.5273 -8168.4238 8192.8633 y-8168.4238 8193.0537 -8167.3906 8193.3066 -8167.3906 8193.4961 c-8167.3906 8193.666 -8167.5801 8193.6855 -8167.7271 8193.6855 c-8167.8115 8193.6855 -8168.8882 8193.6855 -8169.3306 8192.8633 c-8169.5415 8192.4629 -8169.5835 8191.8945 -8169.5835 8191.4512 cf1 D-8165.4927 8189.1953 m-8165.4927 8189.1514 -8165.5137 8189.1318 -8165.5352 8189.1318 c-8165.5986 8189.1318 -8165.7666 8189.4688 -8165.8506 8189.4688 c-8165.9146 8189.4688 -8165.9995 8189.3848 -8166.0415 8189.2783 c-8166.0615 8189.1953 -8166.1255 8188.7305 -8166.21 8188.7305 c-8166.2524 8188.7305 -8166.4209 8188.9629 -8166.4634 8188.9629 c-8166.6104 8188.9629 -8166.7158 8188.7305 -8166.7158 8188.5215 c-8166.7158 8188.415 -8166.7783 8188.415 -8166.9263 8188.415 c-8167.5166 8188.415 -8169.1406 8186.2432 -8169.5625 8184.4922 c-8169.6055 8184.3242 -8169.5835 8184.1768 -8169.8994 8184.0703 c-8172.0713 8183.334 -8174.5176 8181.1816 -8174.5176 8181.0557 c-8174.5176 8180.9082 -8174.4336 8180.8242 -8174.3066 8180.8242 c-8174.2432 8180.8242 -8174.1592 8180.8242 -8173.6538 8181.1602 c-8172.7681 8181.751 -8170.7217 8183.0381 -8169.8994 8183.0381 c-8169.6265 8183.0381 -8169.6055 8182.6797 -8169.6055 8182.4258 c-8169.6055 8182.2354 -8169.6265 8182.0039 -8169.6265 8181.8574 c-8169.6465 8181.583 -8169.9634 8181.2656 -8169.9634 8181.0977 c-8169.9634 8180.9502 -8169.8154 8180.8447 -8169.6465 8180.8447 c-8169.4575 8180.8447 -8169.3306 8180.8662 -8169.1606 8181.0557 c-8168.8662 8181.3926 -8168.7402 8181.541 -8168.4238 8181.541 c-8168.1914 8181.541 -8167.1377 8180.8242 -8166.8838 8180.8242 c-8166.5679 8180.8242 -8166.1895 8181.3086 -8166.1895 8181.6045 c-8166.1895 8182.3418 -8167.0942 8182.9326 -8167.6431 8182.9326 c-8168.0225 8182.9326 -8168.4438 8182.8066 -8168.6353 8182.5742 c-8168.6982 8182.5098 -8168.7607 8182.4688 -8168.8242 8182.4688 c-8168.9937 8182.4688 -8169.1191 8182.9326 -8169.1191 8182.9746 c-8169.1191 8183.3975 -8166.2729 8183.459 -8165.9146 8183.459 c-8165.7666 8183.459 -8165.6401 8183.375 -8165.5352 8183.2061 c-8165.3447 8182.9121 -8164.1855 8181.6895 -8162.6255 8181.6895 c-8160.79 8181.6895 -8159.0825 8182.9521 -8159.0825 8184.8506 c-8159.0825 8184.957 -8159.1245 8185.5039 -8159.1245 8185.5264 c-8159.1245 8185.5898 -8158.0063 8187.3389 -8156.6782 8187.3389 c-8155.6245 8187.3389 -8155.2656 8186.75 -8155.2656 8186.2637 c-8155.2656 8186.0313 -8155.3711 8185.3789 -8155.8984 8185.3789 c-8156.1094 8185.3789 -8156.2144 8185.5898 -8156.2144 8185.9688 c-8156.2144 8186.0527 -8156.0039 8186.4326 -8156.0039 8186.5381 c-8156.0039 8186.5801 -8156.0239 8186.6016 -8156.0879 8186.6016 c-8156.4258 8186.6016 -8156.9521 8186.2432 -8157.1846 8185.5898 c-8157.4595 8184.873 -8157.8594 8184.1768 -8158.1958 8183.7754 c-8158.5127 8183.418 -8158.6182 8182.8262 -8158.6182 8182.4893 c-8158.6182 8182.0039 -8158.1338 8180.8447 -8156.4878 8180.8447 c-8155.2871 8180.8447 -8154.4434 8181.583 -8154.4434 8182.1943 c-8154.4434 8182.8066 -8154.7598 8183.1855 -8155.2026 8183.1855 c-8155.6455 8183.1855 -8155.9824 8182.8477 -8155.9824 8182.5098 c-8155.9824 8181.8359 -8156.1514 8181.6895 -8156.4878 8181.6895 c-8156.6992 8181.6895 -8156.8896 8181.8145 -8156.8896 8182.1309 c-8156.8896 8182.3633 -8156.8896 8182.7422 -8155.3711 8184.0078 c-8154.8857 8184.4082 -8154.4214 8185.1055 -8154.4214 8185.8848 c-8154.4214 8186.6445 -8155.4561 8187.8447 -8156.6362 8187.8447 c-8157.8594 8187.8447 -8158.6401 8187.0654 -8159.2515 8186.3486 c-8159.5454 8186.0117 -8160.9814 8184.3242 -8161.0439 8184.3018 c-8161.2334 8184.1543 -8161.3174 8184.0293 -8161.3174 8183.9023 c-8161.3174 8183.7969 -8161.2119 8183.6914 -8161.0854 8183.6914 c-8160.8535 8183.6914 -8159.9058 8184.6406 -8159.8198 8184.6406 c-8159.7568 8184.6406 -8159.7153 8184.5762 -8159.7153 8184.4922 c-8159.7153 8183.7334 -8160.8535 8182.2578 -8162.6255 8182.2578 c-8164.1006 8182.2578 -8164.9863 8183.375 -8164.9863 8183.418 c-8164.9863 8183.5439 -8164.8394 8183.6689 -8164.5225 8183.7334 c-8160.6426 8184.4717 -8157.3955 8188.0215 -8157.3955 8192.6377 c-8157.3955 8192.7441 -8157.2256 8192.7705 -8157.0786 8192.7705 c-8156.7202 8192.7705 -8156.0879 8192.8496 -8156.0879 8192.5762 c-8156.0879 8192.4697 -8156.1294 8192.3438 -8156.1934 8192.2168 c-8156.5518 8191.6465 -8156.8682 8191.4727 -8156.8682 8190.5215 c-8156.8682 8190.0586 -8156.4878 8189.5322 -8155.8984 8189.5322 c-8154.8657 8189.5322 -8154.4214 8190.5654 -8154.4214 8190.7969 c-8154.4214 8190.9658 -8154.5073 8191.0293 -8154.5903 8191.0293 c-8154.7178 8191.0293 -8155.2241 8190.502 -8155.3711 8190.502 c-8155.5615 8190.502 -8155.7085 8190.5439 -8155.7085 8191.0293 c-8155.7085 8191.3672 -8154.4214 8195.0781 -8154.4214 8195.8789 c-8154.4214 8196.4492 -8154.7598 8197.1455 -8155.6455 8197.6504 c-8155.6875 8197.6719 -8155.7085 8197.6924 -8155.7085 8197.7344 c-8155.7085 8197.8184 -8155.5615 8197.9248 -8155.4126 8197.9658 c-8154.8018 8198.1357 -8154.4214 8198.2412 -8154.4214 8199.1904 c-8154.4214 8199.5488 -8154.7598 8200.2236 -8155.0127 8200.2236 c-8155.2026 8200.2236 -8155.2026 8200.1807 -8155.2026 8199.8223 c-8155.2026 8199.6748 -8155.2446 8199.5693 -8155.3926 8199.4639 c-8155.7085 8199.2529 -8155.7295 8199.2109 -8155.8135 8198.7266 c-8155.8774 8198.4102 -8156.0039 8198.3242 -8157.1426 8197.6924 c-8157.5854 8197.4189 -8157.6904 8197.1865 -8157.7744 8196.9551 c-8157.8594 8196.7637 -8157.9233 8196.7637 -8158.4287 8196.7637 c-8158.9561 8196.7637 -8161.5073 8194.0449 -8161.5073 8193.918 c-8161.5073 8193.8555 -8161.3809 8193.5596 -8161.3809 8193.4961 c-8161.3809 8193.4336 -8161.4014 8193.3916 -8161.4438 8193.3916 c-8161.4863 8193.3916 -8161.6338 8193.6016 -8161.6758 8193.6016 c-8161.7817 8193.6016 -8161.7817 8193.4121 -8161.7817 8193.2637 c-8161.7817 8193.1602 -8161.5703 8192.5898 -8161.5703 8192.4424 c-8161.5703 8192.3584 -8161.5918 8192.2949 -8161.6338 8192.2949 c-8161.7178 8192.2949 -8161.9072 8192.7578 -8161.9922 8192.7578 c-8162.0342 8192.7578 -8162.0762 8192.7168 -8162.0762 8192.5898 c-8162.0762 8192.4424 -8161.8862 8191.7256 y-8161.8862 8191.6621 -8161.9072 8191.5566 -8161.9502 8191.5566 c-8162.0342 8191.5566 -8162.1826 8191.957 -8162.2666 8191.957 c-8162.3286 8191.957 -8162.3926 8191.873 -8162.3926 8191.7256 c-8162.3926 8191.6406 -8162.2446 8191.2197 -8162.2446 8191.1143 c-8162.2446 8191.0508 -8162.2666 8190.9863 -8162.3086 8190.9863 c-8162.3506 8190.9863 -8162.5835 8191.5996 -8162.7095 8191.5996 c-8162.7935 8191.5996 -8162.8994 8191.4922 -8162.8994 8191.3877 c-8162.8994 8191.3037 -8162.7729 8190.9453 -8162.7729 8190.8613 c-8162.7729 8190.8184 -8162.7729 8190.7969 -8162.7935 8190.7969 c-8162.8774 8190.7969 -8163.0254 8191.2822 -8163.1104 8191.2822 c-8163.3418 8191.2822 -8163.3623 8190.8613 -8163.3623 8190.6709 c-8163.3623 8190.5869 -8163.2998 8190.25 -8163.2998 8190.1855 c-8163.2998 8190.123 -8163.3198 8190.1016 -8163.3418 8190.1016 c-8163.4897 8190.1016 -8163.6782 8190.9023 -8163.8271 8190.9023 c-8164.0386 8190.9023 -8164.0386 8190.7129 -8164.0386 8190.4814 c-8164.0166 8189.9541 L-8164.0166 8189.9326 -8164.0386 8189.9121 y-8164.0586 8189.9121 -8164.1006 8189.9326 -8164.1226 8189.9961 c-8164.1855 8190.207 -8164.3115 8190.6289 -8164.5225 8190.6289 c-8164.6694 8190.6289 -8164.8174 8190.46 -8164.8174 8190.3135 c-8164.8174 8190.0801 -8164.7119 8189.7002 -8164.7119 8189.4688 c-8164.7119 8189.4053 -8164.7334 8189.3848 -8164.7754 8189.3848 c-8164.8608 8189.3848 -8164.9863 8189.8262 -8165.0278 8189.9121 c-8165.0918 8189.9961 -8165.1553 8190.0176 -8165.2192 8190.0176 c-8165.5352 8190.0176 -8165.5352 8189.7002 -8165.5352 8189.5527 C-8165.4927 8189.1953 lf0 D-8166.8633 8184.8301 m-8166.8633 8184.5977 -8168.8042 8184.4082 -8168.8662 8184.4082 c-8168.9722 8184.4082 -8169.0352 8184.4717 -8169.0352 8184.5762 c-8169.0352 8185.4414 -8167.2847 8187.6768 -8166.8633 8187.6768 c-8166.7998 8187.6768 -8166.7783 8187.6563 -8166.7783 8187.5928 c-8167.2002 8186.3486 -8167.2002 8186.0957 v-8167.2002 8185.7158 -8167.0942 8185.4629 -8166.9058 8185.041 c-8166.8838 8184.957 -8166.8633 8184.8936 -8166.8633 8184.8301 cf-8158.1338 8196.2793 m-8157.9858 8196.2793 -8157.4795 8195.7744 -8157.3325 8195.7744 c-8157.2065 8195.7744 -8157.0791 8195.8584 -8157.0791 8196.0059 c-8157.0791 8196.0898 -8157.2695 8196.5322 -8157.2695 8196.6377 c-8157.2695 8196.9961 -8156.8896 8197.293 -8156.5098 8197.293 c-8156.1094 8197.293 -8154.9702 8196.9756 -8154.9702 8195.752 c-8154.9702 8194.6563 -8155.3926 8194.6563 -8157.0366 8194.6563 c-8157.3955 8194.6563 -8159.0615 8194.8457 -8159.3145 8194.8457 c-8159.4399 8194.8457 -8159.4834 8194.6768 -8159.4834 8194.5498 c-8159.4834 8194.5088 -8159.4834 8194.4668 -8159.4614 8194.4453 c-8159.3984 8194.0664 -8159.1675 8193.5176 -8159.1675 8193.1377 c-8159.1675 8188.6895 -8163.2998 8184.8301 -8165.7666 8184.8301 c-8166.4209 8184.8301 -8166.6519 8185.6318 -8166.6519 8186.0527 c-8166.6519 8187.7822 -8164.6694 8188.8145 -8164.4175 8188.8145 c-8164.3545 8188.8145 -8164.3335 8188.7949 -8164.3335 8188.752 c-8164.3335 8188.71 -8164.3545 8188.668 -8164.3975 8188.626 c-8164.5225 8188.457 -8165.0498 8187.8447 -8165.0498 8187.2129 c-8165.0498 8186.875 -8164.7554 8186.4326 -8163.9951 8186.4326 c-8162.7305 8186.4326 -8162.1826 8187.7822 -8162.1826 8188.1406 c-8162.1826 8188.2891 -8162.2446 8188.499 -8162.4561 8188.499 c-8162.6035 8188.499 -8163.0049 8187.8447 -8163.1519 8187.8447 c-8163.2158 8187.8447 -8163.4473 8187.9717 -8163.5103 8187.9717 c-8163.5942 8187.9717 -8163.6582 8187.9512 -8163.7422 8187.9512 c-8163.8057 8187.9512 -8163.8481 8188.0137 -8163.8481 8188.1191 c-8163.8481 8188.4785 -8163.3623 8189.0469 -8162.8774 8189.3008 c-8161.9722 8189.7637 -8160.6226 8191.0928 -8160.6226 8192.5479 c-8160.6226 8192.9688 -8160.6846 8193.3701 -8160.6846 8193.707 c-8160.6846 8194.2559 -8159.7568 8195.1201 -8158.8081 8196.0059 c-8158.6401 8196.1533 -8158.3862 8196.2793 -8158.1338 8196.2793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8149.9722 8206 m-8149.9722 8179.9727 L-8176 8179.9727 L-8176 8206 L-8149.9722 8206 Ln0 Ap0 R0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA0.375 w-8158.6455 8192.9893 m-8149.9736 8192.9893 lS-8162.9839 8206 m-8162.9839 8197.3242 lS0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA1.125 w-8158.7202 8188.6504 m-8149.9727 8188.6504 lS-8167.3232 8206 m-8167.3232 8196.6455 lS0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA-8158.6504 8206 m-8158.6504 8203.5869 l-8155.9937 8203.3633 -8154.3096 8201.6602 v-8152.6064 8199.9336 -8152.3774 8197.3281 y-8149.9727 8197.3281 lS*u0 O0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa1 w-8166.7783 8189.6377 m-8166.7783 8189.4902 -8166.9058 8189.4053 -8167.0103 8189.4053 c-8167.0527 8189.4053 -8167.2432 8189.6172 -8167.3057 8189.6172 c-8167.3271 8189.6172 -8167.4326 8189.5957 -8167.4326 8189.4688 c-8167.4326 8189.4053 -8167.3271 8189.1318 y-8167.3271 8189.1104 -8169.4155 8186.6016 -8171.5654 8186.0957 c-8171.7344 8186.0742 -8171.8398 8186.1582 -8171.9238 8185.8418 c-8172.3042 8184.5762 -8173.1265 8183.1426 -8174.3706 8181.8145 c-8174.4966 8181.668 -8174.9185 8181.2461 -8175.1089 8181.2461 c-8175.2134 8181.2461 -8175.2974 8181.2656 -8175.2974 8181.4346 c-8175.2974 8181.7725 -8174.1167 8183.1006 -8173.9263 8183.4375 c-8173.0845 8184.8936 -8173.0845 8185.5674 -8173.0845 8185.7998 c-8173.0845 8185.9258 -8173.2734 8186.0527 -8173.6538 8186.0527 c-8173.8433 8186.0527 -8174.0752 8186.0313 -8174.2017 8186.0313 c-8174.3281 8186.0117 -8174.8975 8185.7354 -8175.0449 8185.7354 c-8175.2134 8185.7354 -8175.3193 8185.8633 -8175.3193 8186.0313 c-8175.3193 8186.2227 -8175.2559 8186.3486 -8175.0654 8186.4961 c-8174.3921 8187.1074 -8174.3486 8187.1279 -8174.3486 8187.6133 c-8174.3486 8187.8877 -8175.0449 8189.0898 -8175.0449 8189.3848 c-8175.0449 8189.7002 -8174.5806 8189.9326 -8174.3066 8189.9326 c-8173.4424 8189.9326 -8173.21 8188.457 -8173.21 8188.1406 c-8173.21 8187.9082 -8173.5054 8186.8135 y-8173.5054 8186.6221 -8173.4424 8186.6221 -8172.9995 8186.6221 c-8172.6626 8186.6221 -8172.5986 8189.5527 -8172.5986 8189.7637 c-8172.5986 8189.9326 -8172.6826 8190.0586 -8172.8511 8190.166 c-8173.1265 8190.3555 -8174.4336 8191.6826 -8174.4121 8193.0957 c-8174.4121 8195.585 -8172.6406 8196.5322 -8171.9458 8196.6172 c-8171.5874 8196.6602 -8170.7007 8196.6377 -8170.4058 8196.8076 c-8169.9424 8197.0391 -8168.8042 8198.1992 -8168.8042 8199.1904 c-8168.8042 8200.3916 -8169.5215 8200.75 -8169.8774 8200.75 c-8170.2378 8200.75 -8170.5103 8200.7295 -8170.5103 8200.2441 c-8170.5103 8200.0332 -8170.3423 8199.8008 -8170.1318 8199.7383 c-8170.0474 8199.7168 -8169.2881 8199.5273 -8169.2881 8199.2109 c-8169.2881 8199.0625 -8169.3721 8199.0625 -8169.5835 8199.0625 c-8170.1318 8199.0625 -8170.8066 8198.8535 -8172.0928 8197.6504 c-8172.4722 8197.3135 -8173.1265 8197.2295 -8173.5679 8197.2295 c-8174.0537 8197.2295 -8175.2974 8197.6924 -8175.2974 8199.1904 c-8175.2974 8201.0234 -8174.4751 8201.7207 -8173.8433 8201.7207 c-8173.4209 8201.7207 -8172.8936 8201.4033 -8172.8936 8201.1289 c-8172.8936 8200.793 -8172.9575 8200.3711 -8173.5479 8200.3281 c-8174.0537 8200.2861 -8174.3066 8200.0537 -8174.3066 8199.7168 c-8174.3066 8199.5059 -8174.1592 8199.2949 -8173.8218 8199.2949 c-8173.3154 8199.2949 -8172.7041 8199.8652 -8172.0713 8200.6025 c-8171.6714 8201.0879 -8170.7007 8201.6152 -8169.9209 8201.6152 c-8169.1191 8201.6152 -8168.0654 8200.709 -8168.0654 8199.3369 c-8168.0654 8198.0723 -8169.4995 8196.7637 -8170.2378 8196.2383 c-8170.9546 8195.7109 -8171.3335 8195.3311 -8171.46 8195.1201 c-8171.5654 8194.9727 -8171.9033 8194.0234 -8172.1143 8194.0234 c-8172.2607 8194.0234 -8172.3672 8194.1914 -8172.3672 8194.4033 c-8172.3672 8194.7197 -8172.1143 8195.3535 -8171.7759 8195.6895 c-8171.6929 8195.7949 -8171.6494 8195.8584 -8171.6494 8195.9209 c-8171.6494 8196.0693 -8171.8398 8196.0898 -8171.9873 8196.0898 c-8172.5767 8196.0898 -8173.7793 8195.1201 -8173.7793 8193.2861 c-8173.7793 8191.7041 -8172.7881 8190.8613 -8172.6406 8190.8613 c-8172.5361 8190.8613 -8172.4297 8190.9658 -8172.3672 8191.1777 c-8170.6592 8197.334 -8165.7822 8198.5576 -8163.3774 8198.5576 c-8163.2729 8198.5576 -8163.1895 8198.6201 -8163.1895 8198.7695 c-8163.1895 8198.8945 -8163.1895 8199.9922 -8163.3359 8199.9922 c-8163.3774 8199.9922 -8163.4414 8199.9697 -8163.5264 8199.9072 c-8164.0942 8199.4434 -8164.3755 8199.085 -8165.3022 8199.085 c-8165.7666 8199.085 -8166.5679 8199.6113 -8166.5679 8200.2236 c-8166.5679 8201.0029 -8165.8936 8201.7207 -8165.4082 8201.7207 c-8165.0498 8201.7207 -8164.9023 8201.6357 -8164.9023 8201.5098 c-8164.9023 8201.3818 -8165.3662 8200.9404 -8165.3662 8200.793 c-8165.3662 8200.5391 -8165.3242 8200.3916 -8164.8809 8200.3916 c-8164.4814 8200.3916 -8163.7842 8200.5615 -8163.3418 8200.8145 c-8162.8774 8201.0879 -8161.7393 8201.7207 -8160.7065 8201.7207 c-8159.9473 8201.7207 -8158.9561 8201.2773 -8158.4702 8200.4766 c-8158.4287 8200.4121 -8158.3862 8200.3916 -8158.3447 8200.3916 c-8158.2393 8200.3916 -8158.1543 8200.4766 -8158.1338 8200.625 c-8158.0913 8201.0234 -8157.7534 8201.7207 -8156.9312 8201.7207 c-8156.3408 8201.7207 -8155.8135 8201.2139 -8155.8135 8200.7705 c-8155.8135 8200.6025 -8155.9194 8200.5391 -8156.0239 8200.5391 c-8156.1094 8200.5391 -8156.4878 8200.793 -8156.5942 8200.793 c-8156.7407 8200.793 -8157.6479 8200.1807 -8157.7334 8200.0332 c-8158.5127 8198.7471 -8158.5977 8198.5996 -8159.2295 8198.3457 c-8159.3984 8198.2617 -8159.3984 8198.1777 -8159.3984 8197.3135 c-8159.3984 8197.1865 -8159.3984 8196.8906 -8159.5454 8196.7227 c-8159.8198 8196.4492 -8161.9287 8194.3818 -8162.1392 8194.3818 c-8162.2241 8194.3818 -8162.4985 8194.6563 -8162.5835 8194.6563 c-8162.6035 8194.6563 -8162.6255 8194.6563 -8162.6255 8194.6143 C-8162.6035 8194.4668 l-8162.6035 8194.2988 -8162.6455 8194.2129 -8162.8564 8194.2129 c-8162.9199 8194.2129 -8163.1943 8194.3398 -8163.2568 8194.3398 c-8163.3198 8194.3398 -8163.3623 8193.8975 -8163.4473 8193.8975 c-8163.4678 8193.8975 -8163.8057 8194.1289 -8163.8896 8194.1289 c-8164.0166 8194.1289 -8164.1006 8194.0449 -8164.1006 8193.9395 c-8164.1006 8193.877 -8164.1006 8193.3916 -8164.2065 8193.3916 c-8164.2915 8193.3916 -8164.5225 8193.6855 -8164.5654 8193.6855 c-8164.5854 8193.6855 -8164.5854 8193.666 -8164.5854 8193.6016 C-8164.5439 8193.1807 l-8164.5439 8193.1162 -8164.5854 8193.0957 -8164.6494 8193.0957 c-8164.7119 8193.0957 -8164.9658 8193.4121 -8165.0498 8193.4121 c-8165.0918 8193.4121 -8165.1138 8193.3701 -8165.1138 8193.2861 c-8165.1138 8193.2441 -8164.9233 8192.5273 -8164.9233 8192.3789 c-8164.9233 8192.2949 -8164.9658 8192.252 -8165.0078 8192.252 c-8165.0918 8192.252 -8165.4297 8192.6113 -8165.4722 8192.6113 c-8165.4927 8192.6113 -8165.4927 8192.6113 -8165.4927 8192.5898 c-8165.4927 8192.5059 -8165.3882 8192.1465 -8165.3882 8192.127 c-8165.3882 8192.1055 -8165.4082 8192.084 -8165.4297 8192.084 c-8165.4722 8192.084 -8165.6826 8192.2949 -8165.7446 8192.2949 c-8165.7666 8192.2949 -8165.7666 8192.2949 -8165.7666 8192.252 c-8165.7666 8192.084 -8165.5137 8191.3457 -8165.5137 8191.2822 c-8165.5137 8191.2607 -8165.5352 8191.2402 -8165.5562 8191.2402 c-8165.6826 8191.2402 -8166.1055 8191.8105 -8166.1465 8191.8105 c-8166.1675 8191.8105 -8166.1675 8191.7891 -8166.1675 8191.7256 c-8166.1675 8191.5352 -8165.8936 8190.6289 y-8165.8936 8190.6074 -8165.9146 8190.5869 -8165.9351 8190.5869 c-8166.0615 8190.5869 -8166.4414 8191.1338 -8166.5049 8191.1338 c-8166.5264 8191.1338 -8166.5264 8191.1338 -8166.5264 8191.0928 c-8166.2729 8190.1855 -8166.2729 8190.1016 v-8166.2729 8189.9961 -8166.3154 8189.9541 -8166.3994 8189.9541 c-8166.4634 8189.9541 -8166.6943 8190.291 -8166.7783 8190.291 c-8166.8218 8190.291 -8166.8418 8190.25 -8166.8418 8190.1855 c-8166.7783 8189.6377 Lf1 D-8171.0386 8188.9004 m-8171.1016 8188.9414 -8171.1865 8188.9629 -8171.2495 8188.9629 c-8171.5874 8188.9629 -8171.6714 8186.96 -8171.6714 8186.7695 c-8171.6714 8186.707 -8171.6289 8186.666 -8171.5654 8186.666 c-8170.4272 8186.666 -8168.5498 8188.627 -8168.5498 8189.0469 c-8168.5498 8189.0898 -8168.5498 8189.1104 -8168.5928 8189.1104 c-8168.6138 8189.1104 -8168.6553 8189.0898 -8168.6982 8189.0684 c-8169.0986 8188.7949 -8169.5215 8188.6895 -8170.1104 8188.6895 c-8170.4902 8188.6895 -8170.7007 8188.752 -8171.0386 8188.9004 cf-8169.3306 8192.8633 m-8168.8882 8193.6855 -8167.8115 8193.6855 -8167.7271 8193.6855 c-8167.5801 8193.6855 -8167.3906 8193.666 -8167.3906 8193.4961 c-8167.3906 8193.3066 -8168.4238 8193.0537 -8168.4238 8192.8633 c-8168.2129 8192.5273 -8168.2129 8192.4424 v-8168.2129 8192.043 -8168.2129 8192 -8168.0225 8192 c-8167.7915 8192 -8166.9897 8192.2949 -8166.7378 8193.0117 c-8166.5474 8193.5391 -8165.5767 8195.2666 -8163.4258 8195.2666 c-8162.5615 8195.2666 -8162.2446 8195.1201 -8162.0977 8195.1201 c-8161.7817 8195.1201 -8159.8418 8197.166 -8159.8198 8197.334 c-8159.7998 8197.4395 -8159.7998 8197.5664 -8159.7998 8197.6719 c-8159.7998 8197.8828 -8159.7998 8198.2832 -8160.1782 8198.5361 c-8160.3896 8198.6631 -8160.4951 8198.916 -8160.4951 8199.168 c-8160.4951 8199.2744 -8160.4951 8199.6328 -8160.2207 8199.6328 c-8159.9473 8199.6328 -8159.9058 8199.4854 -8159.9058 8199.1904 c-8159.9058 8199.002 -8159.7358 8198.8945 -8159.5889 8198.8945 c-8159.4399 8198.8945 -8158.8506 8199.1904 -8158.8506 8199.6113 c-8158.8506 8199.8438 -8159.1455 8200.9189 -8160.4321 8200.9189 c-8161.4014 8200.9189 -8161.4014 8200.793 -8161.4014 8199.3994 c-8161.4014 8198.1357 -8161.3594 8197.7344 -8161.2119 8196.5967 c-8161.1904 8196.5967 -8161.1904 8196.5752 y-8161.1904 8196.4277 -8161.3174 8196.3643 -8161.4233 8196.3643 c-8161.4438 8196.3643 -8161.4648 8196.3848 -8161.4863 8196.3848 c-8161.6118 8196.4063 -8161.9072 8196.7227 -8162.8145 8196.7002 c-8164.7119 8196.7002 -8168.9087 8195.1416 -8170.2793 8192.6533 c-8170.8906 8191.5781 -8171.2705 8190.207 -8171.2705 8189.9541 c-8171.2705 8189.4053 -8170.2578 8189.2373 -8170.0049 8189.2373 c-8168.6553 8189.2373 -8167.2847 8190.9023 -8167.2847 8191.3457 c-8167.2847 8191.3877 -8167.3271 8191.4297 -8167.3486 8191.4297 c-8167.3906 8191.4297 -8167.4326 8191.4092 -8167.4961 8191.3672 c-8167.6431 8191.2197 -8168.2334 8190.5654 -8168.8662 8190.5654 c-8169.5625 8190.5654 -8169.5835 8191.0293 -8169.5835 8191.4512 c-8169.5835 8191.8945 -8169.5415 8192.4629 -8169.3306 8192.8633 cf0 D-8165.5352 8189.5527 m-8165.5352 8189.7002 -8165.5352 8190.0176 -8165.2192 8190.0176 c-8165.1553 8190.0176 -8165.0918 8189.9961 -8165.0278 8189.9121 c-8164.9863 8189.8262 -8164.8608 8189.3848 -8164.7754 8189.3848 c-8164.7334 8189.3848 -8164.7119 8189.4053 -8164.7119 8189.4688 c-8164.7119 8189.7002 -8164.8174 8190.0801 -8164.8174 8190.3135 c-8164.8174 8190.46 -8164.6694 8190.6289 -8164.5225 8190.6289 c-8164.3115 8190.6289 -8164.1855 8190.207 -8164.1226 8189.9961 c-8164.1006 8189.9326 -8164.0586 8189.9121 -8164.0386 8189.9121 c-8164.0166 8189.9326 -8164.0166 8189.9541 V-8164.0386 8190.4814 l-8164.0386 8190.7129 -8164.0386 8190.9023 -8163.8271 8190.9023 c-8163.6782 8190.9023 -8163.4897 8190.1016 -8163.3418 8190.1016 c-8163.3198 8190.1016 -8163.2998 8190.123 -8163.2998 8190.1855 c-8163.2998 8190.25 -8163.3623 8190.5869 -8163.3623 8190.6709 c-8163.3623 8190.8613 -8163.3418 8191.2822 -8163.1104 8191.2822 c-8163.0254 8191.2822 -8162.8774 8190.7969 -8162.7935 8190.7969 c-8162.7729 8190.7969 -8162.7729 8190.8184 -8162.7729 8190.8613 c-8162.7729 8190.9453 -8162.8994 8191.3037 -8162.8994 8191.3877 c-8162.8994 8191.4922 -8162.7935 8191.5996 -8162.7095 8191.5996 c-8162.5835 8191.5996 -8162.3506 8190.9863 -8162.3086 8190.9863 c-8162.2666 8190.9863 -8162.2446 8191.0508 -8162.2446 8191.1143 c-8162.2446 8191.2197 -8162.3926 8191.6406 -8162.3926 8191.7256 c-8162.3926 8191.873 -8162.3286 8191.957 -8162.2666 8191.957 c-8162.1826 8191.957 -8162.0342 8191.5566 -8161.9502 8191.5566 c-8161.9072 8191.5566 -8161.8862 8191.6621 -8161.8862 8191.7256 c-8162.0762 8192.4424 -8162.0762 8192.5898 v-8162.0762 8192.7168 -8162.0342 8192.7578 -8161.9922 8192.7578 c-8161.9072 8192.7578 -8161.7178 8192.2949 -8161.6338 8192.2949 c-8161.5918 8192.2949 -8161.5703 8192.3584 -8161.5703 8192.4424 c-8161.5703 8192.5898 -8161.7817 8193.1602 -8161.7817 8193.2637 c-8161.7817 8193.4121 -8161.7817 8193.6016 -8161.6758 8193.6016 c-8161.6338 8193.6016 -8161.4863 8193.3916 -8161.4438 8193.3916 c-8161.4014 8193.3916 -8161.3809 8193.4336 -8161.3809 8193.4961 c-8161.3809 8193.5596 -8161.5073 8193.8555 -8161.5073 8193.918 c-8161.5073 8194.0449 -8158.9561 8196.7637 -8158.4287 8196.7637 c-8157.9233 8196.7637 -8157.8594 8196.7637 -8157.7744 8196.9551 c-8157.6904 8197.1865 -8157.5854 8197.4189 -8157.1426 8197.6924 c-8156.0039 8198.3242 -8155.8774 8198.4102 -8155.8135 8198.7266 c-8155.7295 8199.2109 -8155.7085 8199.2529 -8155.3926 8199.4639 c-8155.2446 8199.5693 -8155.2026 8199.6748 -8155.2026 8199.8223 c-8155.2026 8200.1807 -8155.2026 8200.2236 -8155.0127 8200.2236 c-8154.7598 8200.2236 -8154.4214 8199.5488 -8154.4214 8199.1904 c-8154.4214 8198.2412 -8154.8018 8198.1357 -8155.4126 8197.9658 c-8155.5615 8197.9248 -8155.7085 8197.8184 -8155.7085 8197.7344 c-8155.7085 8197.6924 -8155.6875 8197.6719 -8155.6455 8197.6504 c-8154.7598 8197.1455 -8154.4214 8196.4492 -8154.4214 8195.8789 c-8154.4214 8195.0781 -8155.7085 8191.3672 -8155.7085 8191.0293 c-8155.7085 8190.5439 -8155.5615 8190.502 -8155.3711 8190.502 c-8155.2241 8190.502 -8154.7178 8191.0293 -8154.5903 8191.0293 c-8154.5073 8191.0293 -8154.4214 8190.9658 -8154.4214 8190.7969 c-8154.4214 8190.5654 -8154.8657 8189.5322 -8155.8984 8189.5322 c-8156.4878 8189.5322 -8156.8682 8190.0586 -8156.8682 8190.5215 c-8156.8682 8191.4727 -8156.5518 8191.6465 -8156.1934 8192.2168 c-8156.1294 8192.3438 -8156.0879 8192.4697 -8156.0879 8192.5762 c-8156.0879 8192.8496 -8156.7202 8192.7705 -8157.0786 8192.7705 c-8157.2256 8192.7705 -8157.3955 8192.7441 -8157.3955 8192.6377 c-8157.3955 8188.0215 -8160.6426 8184.4717 -8164.5225 8183.7334 c-8164.8394 8183.6689 -8164.9863 8183.5439 -8164.9863 8183.418 c-8164.9863 8183.375 -8164.1006 8182.2578 -8162.6255 8182.2578 c-8160.8535 8182.2578 -8159.7153 8183.7334 -8159.7153 8184.4922 c-8159.7153 8184.5762 -8159.7568 8184.6406 -8159.8198 8184.6406 c-8159.9058 8184.6406 -8160.8535 8183.6914 -8161.0854 8183.6914 c-8161.2119 8183.6914 -8161.3174 8183.7969 -8161.3174 8183.9023 c-8161.3174 8184.0293 -8161.2334 8184.1543 -8161.0439 8184.3018 c-8160.9814 8184.3242 -8159.5454 8186.0117 -8159.2515 8186.3486 c-8158.6401 8187.0654 -8157.8594 8187.8447 -8156.6362 8187.8447 c-8155.4561 8187.8447 -8154.4214 8186.6445 -8154.4214 8185.8848 c-8154.4214 8185.1055 -8154.8857 8184.4082 -8155.3711 8184.0078 c-8156.8896 8182.7422 -8156.8896 8182.3633 -8156.8896 8182.1309 c-8156.8896 8181.8145 -8156.6992 8181.6895 -8156.4878 8181.6895 c-8156.1514 8181.6895 -8155.9824 8181.8359 -8155.9824 8182.5098 c-8155.9824 8182.8477 -8155.6455 8183.1855 -8155.2026 8183.1855 c-8154.7598 8183.1855 -8154.4434 8182.8066 -8154.4434 8182.1943 c-8154.4434 8181.584 -8155.2871 8180.8447 -8156.4878 8180.8447 c-8158.1338 8180.8447 -8158.6182 8182.0039 -8158.6182 8182.4893 c-8158.6182 8182.8262 -8158.5127 8183.418 -8158.1958 8183.7754 c-8157.8594 8184.1768 -8157.4595 8184.873 -8157.1846 8185.5898 c-8156.9521 8186.2432 -8156.4258 8186.6016 -8156.0879 8186.6016 c-8156.0239 8186.6016 -8156.0039 8186.5801 -8156.0039 8186.5381 c-8156.0039 8186.4326 -8156.2144 8186.0527 -8156.2144 8185.9688 c-8156.2144 8185.5898 -8156.1094 8185.3789 -8155.8984 8185.3789 c-8155.3711 8185.3789 -8155.2656 8186.0313 -8155.2656 8186.2637 c-8155.2656 8186.75 -8155.6245 8187.3389 -8156.6782 8187.3389 c-8158.0063 8187.3389 -8159.1245 8185.5898 -8159.1245 8185.5264 c-8159.1245 8185.5039 -8159.0825 8184.957 -8159.0825 8184.8506 c-8159.0825 8182.9521 -8160.79 8181.6895 -8162.6255 8181.6895 c-8164.1855 8181.6895 -8165.3447 8182.9121 -8165.5352 8183.2061 c-8165.6401 8183.375 -8165.7666 8183.459 -8165.9146 8183.459 c-8166.2729 8183.459 -8169.1191 8183.3975 -8169.1191 8182.9746 c-8169.1191 8182.9326 -8168.9937 8182.4688 -8168.8242 8182.4688 c-8168.7607 8182.4688 -8168.6982 8182.5098 -8168.6353 8182.5742 c-8168.4438 8182.8066 -8168.0225 8182.9326 -8167.6431 8182.9326 c-8167.0942 8182.9326 -8166.1895 8182.3418 -8166.1895 8181.6045 c-8166.1895 8181.3086 -8166.5679 8180.8242 -8166.8838 8180.8242 c-8167.1377 8180.8242 -8168.1914 8181.541 -8168.4238 8181.541 c-8168.7402 8181.541 -8168.8662 8181.3926 -8169.1606 8181.0557 c-8169.3306 8180.8662 -8169.4575 8180.8447 -8169.6465 8180.8447 c-8169.8154 8180.8447 -8169.9634 8180.9502 -8169.9634 8181.0977 c-8169.9634 8181.2656 -8169.6465 8181.584 -8169.6265 8181.8574 c-8169.6265 8182.0039 -8169.6055 8182.2354 -8169.6055 8182.4258 c-8169.6055 8182.6797 -8169.6265 8183.0381 -8169.8994 8183.0381 c-8170.7217 8183.0381 -8172.7681 8181.752 -8173.6538 8181.1602 c-8174.1592 8180.8242 -8174.2432 8180.8242 -8174.3066 8180.8242 c-8174.4336 8180.8242 -8174.5176 8180.9082 -8174.5176 8181.0557 c-8174.5176 8181.1816 -8172.0713 8183.334 -8169.8994 8184.0703 c-8169.5835 8184.1768 -8169.6055 8184.3242 -8169.5625 8184.4922 c-8169.1406 8186.2432 -8167.5166 8188.416 -8166.9263 8188.416 c-8166.7783 8188.416 -8166.7158 8188.416 -8166.7158 8188.5215 c-8166.7158 8188.7305 -8166.6104 8188.9629 -8166.4634 8188.9629 c-8166.4209 8188.9629 -8166.2524 8188.7305 -8166.21 8188.7305 c-8166.1255 8188.7305 -8166.0615 8189.1953 -8166.0415 8189.2783 c-8165.9995 8189.3848 -8165.9146 8189.4688 -8165.8506 8189.4688 c-8165.7666 8189.4688 -8165.5986 8189.1318 -8165.5352 8189.1318 c-8165.5137 8189.1318 -8165.4927 8189.1514 -8165.4927 8189.1953 c-8165.5352 8189.5527 Lf1 D-8166.9058 8185.041 m-8167.0942 8185.4629 -8167.2002 8185.7158 -8167.2002 8186.0957 c-8167.2002 8186.3486 -8166.7783 8187.5928 y-8166.7783 8187.6563 -8166.7998 8187.6768 -8166.8633 8187.6768 c-8167.2847 8187.6768 -8169.0352 8185.4414 -8169.0352 8184.5762 c-8169.0352 8184.4717 -8168.9722 8184.4082 -8168.8662 8184.4082 c-8168.8042 8184.4082 -8166.8633 8184.5977 -8166.8633 8184.8301 c-8166.8633 8184.8936 -8166.8838 8184.957 -8166.9058 8185.041 cf-8158.8081 8196.0059 m-8159.7568 8195.1201 -8160.6846 8194.2559 -8160.6846 8193.707 c-8160.6846 8193.3701 -8160.6226 8192.9688 -8160.6226 8192.5479 c-8160.6226 8191.0928 -8161.9722 8189.7637 -8162.8774 8189.3008 c-8163.3623 8189.0469 -8163.8481 8188.4785 -8163.8481 8188.1191 c-8163.8481 8188.0137 -8163.8057 8187.9512 -8163.7422 8187.9512 c-8163.6582 8187.9512 -8163.5942 8187.9717 -8163.5103 8187.9717 c-8163.4473 8187.9717 -8163.2158 8187.8447 -8163.1519 8187.8447 c-8163.0049 8187.8447 -8162.6035 8188.5 -8162.4561 8188.5 c-8162.2446 8188.5 -8162.1826 8188.2891 -8162.1826 8188.1406 c-8162.1826 8187.7822 -8162.7305 8186.4326 -8163.9951 8186.4326 c-8164.7554 8186.4326 -8165.0498 8186.875 -8165.0498 8187.2129 c-8165.0498 8187.8447 -8164.5225 8188.457 -8164.3975 8188.627 c-8164.3545 8188.668 -8164.3335 8188.71 -8164.3335 8188.752 c-8164.3335 8188.7949 -8164.3545 8188.8145 -8164.4175 8188.8145 c-8164.6694 8188.8145 -8166.6519 8187.7822 -8166.6519 8186.0527 c-8166.6519 8185.6318 -8166.4209 8184.8301 -8165.7666 8184.8301 c-8163.2998 8184.8301 -8159.1675 8188.6895 -8159.1675 8193.1377 c-8159.1675 8193.5176 -8159.3984 8194.0664 -8159.4614 8194.4453 c-8159.4834 8194.4668 -8159.4834 8194.5088 -8159.4834 8194.5498 c-8159.4834 8194.6768 -8159.4399 8194.8457 -8159.3145 8194.8457 c-8159.0615 8194.8457 -8157.3955 8194.6563 -8157.0366 8194.6563 c-8155.3926 8194.6563 -8154.9702 8194.6563 -8154.9702 8195.752 c-8154.9702 8196.9756 -8156.1094 8197.293 -8156.5098 8197.293 c-8156.8896 8197.293 -8157.2695 8196.9961 -8157.2695 8196.6377 c-8157.2695 8196.5322 -8157.0791 8196.0898 -8157.0791 8196.0059 c-8157.0791 8195.8584 -8157.2065 8195.7744 -8157.3325 8195.7744 c-8157.4795 8195.7744 -8157.9858 8196.2793 -8158.1338 8196.2793 c-8158.3862 8196.2793 -8158.6401 8196.1533 -8158.8081 8196.0059 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au1 Ap0 D0 J 0 j 1 w 4 M []0 d0 XR-8158 8206 m-8176 8206 L-8176 8188 L-8158 8188 L-8158 8206 Lnu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-8158 8197 m-8165.8379 8192.4746 L-8165.8379 8195.5625 L-8176 8195.5625 L-8176 8198.4375 L-8165.8379 8198.4375 L-8165.8379 8201.5264 L-8158 8197 Lf0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-8162.2939 8195.3857 m-8165.0879 8193.7744 L-8165.0879 8196.3008 L-8176 8196.3008 L-8176 8197.7002 L-8165.0879 8197.7002 L-8165.0879 8200.2266 L-8162.2939 8198.6133 L-8159.5 8197 L-8162.2939 8195.3857 Lf0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-8164.1675 8196.0918 m-8164.5586 8196.0918 -8164.8896 8196.3408 -8165.0176 8196.6865 C-8176 8196.6865 L-8176 8197.3125 L-8165.0176 8197.3125 L-8164.8896 8197.6602 -8164.5586 8197.9082 -8164.1675 8197.9082 c-8163.6655 8197.9082 -8163.2588 8197.502 -8163.2588 8197 c-8163.2588 8196.499 -8163.6655 8196.0918 -8164.1675 8196.0918 cfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -(/ Adobe PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Spoke)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Red Arrow Brush)(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0.000031 0.000031 0.000031 0.000031 1 1 1 Xa(White)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(Black)Pc0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa(CMYK Red)Pc0.037415 0.000031 0.938323 0.000031 1 0.945098 0 Xa(CMYK Yellow)Pc0.830198 0.070466 0.955505 0.00293 0 0.647059 0.317647 Xa(CMYK Green)Pc0.696681 0.145022 0.000031 0.000031 0 0.678431 0.933333 Xa(CMYK Cyan)Pc0.9935 0.966247 0.040497 0.005554 0.180392 0.192157 0.568627 Xa(CMYK Blue)Pc0.01062 0.992554 0.011963 0.000031 0.921569 0 0.545098 Xa(CMYK Magenta)Pc0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa(C=15 M=100 Y=90 K=10)Pc0.000671 0.901213 0.849546 0.000031 0.933333 0.25098 0.211765 Xa(C=0 M=90 Y=85 K=0)Pc0.00116 0.798733 0.949126 0.000244 0.941176 0.352941 0.156863 Xa(C=0 M=80 Y=95 K=0)Pc0.003662 0.505333 0.989288 0.000031 0.964706 0.572549 0.117647 Xa(C=0 M=50 Y=100 K=0)Pc0.003021 0.35346 0.847349 0.000031 0.980392 0.686275 0.25098 Xa(C=0 M=35 Y=85 K=0)Pc0.054444 0.003235 0.905974 0.000031 0.976471 0.92549 0.192157 Xa(C=5 M=0 Y=90 K=0)Pc0.20148 0.003815 0.989227 0.000031 0.839216 0.870588 0.137255 Xa(C=20 M=0 Y=100 K=0)Pc0.505791 0.004547 0.994018 0.000031 0.545098 0.772549 0.247059 Xa(C=50 M=0 Y=100 K=0)Pc0.754574 0.006806 0.99881 0.000214 0.215686 0.701961 0.290196 Xa(C=75 M=0 Y=100 K=0)Pc0.86276 0.170748 1 0.035309 0 0.576471 0.270588 Xa(C=85 M=10 Y=100 K=10)Pc0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa(C=90 M=30 Y=95 K=30)Pc0.757656 0.005707 0.748348 0.000031 0.160784 0.705882 0.45098 Xa(C=75 M=0 Y=75 K=0)Pc0.790921 0.110048 0.453498 0.001251 0 0.65098 0.611765 Xa(C=80 M=10 Y=45 K=0)Pc0.705592 0.159396 0.000092 0.000031 0.14902 0.662745 0.878431 Xa(C=70 M=15 Y=0 K=0)Pc0.851041 0.499489 0.004303 0.000031 0.105882 0.458824 0.733333 Xa(C=85 M=50 Y=0 K=0)Pc0.99588 0.93521 0.066804 0.005341 0.168627 0.219608 0.560784 Xa(C=100 M=95 Y=5 K=0)Pc1 1 0.305394 0.220737 0.14902 0.133333 0.380392 Xa(C=100 M=100 Y=25 K=25)Pc0.751614 0.986633 0.016571 0.002991 0.396078 0.176471 0.564706 Xa(C=75 M=100 Y=0 K=0)Pc0.513085 0.995178 0.021149 0.001465 0.564706 0.152941 0.556863 Xa(C=50 M=100 Y=0 K=0)Pc0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa(C=35 M=100 Y=35 K=10)Pc0.097017 0.997467 0.483467 0.004913 0.85098 0.109804 0.360784 Xa(C=10 M=100 Y=50 K=0)Pc0.005951 0.949981 0.201511 0.000031 0.92549 0.160784 0.482353 Xa(C=0 M=95 Y=20 K=0)Pc0.25568 0.249699 0.402838 0.000031 0.756863 0.705882 0.603922 Xa(C=25 M=25 Y=40 K=0)Pc0.395941 0.446571 0.488045 0.063233 0.603922 0.517647 0.47451 Xa(C=40 M=45 Y=50 K=5)Pc0.518273 0.513481 0.611536 0.231357 0.443137 0.396078 0.345098 Xa(C=50 M=50 Y=60 K=25)Pc0.543633 0.603143 0.645685 0.397101 0.352941 0.290196 0.258824 Xa(C=55 M=60 Y=65 K=40)Pc0.236454 0.395239 0.642084 0.015473 0.764706 0.6 0.419608 Xa(C=25 M=40 Y=65 K=0)Pc0.307591 0.494209 0.757412 0.096529 0.658824 0.486275 0.309804 Xa(C=30 M=50 Y=75 K=10)Pc0.360388 0.604211 0.80734 0.241825 0.541176 0.364706 0.231373 Xa(C=35 M=60 Y=80 K=25)Pc0.391821 0.642573 0.894743 0.355108 0.458824 0.298039 0.156863 Xa(C=40 M=65 Y=90 K=35)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(C=40 M=70 Y=100 K=50)Pc0.51931 0.703029 0.790982 0.698695 0.231373 0.137255 0.078431 Xa(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Desert Sunset)PcBb0 0 0 0 Bh2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper Radial)Pc(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fish Pattern)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(C=0 M=0 Y=0 K=100)Pc0.679255 0.611627 0.588037 0.462501 0.25098 0.25098 0.254902 Xa(C=0 M=0 Y=0 K=90)Pc0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa(C=0 M=0 Y=0 K=80)Pc0.581781 0.492103 0.470741 0.1514 0.427451 0.431373 0.439216 Xa(C=0 M=0 Y=0 K=70)Pc0.521477 0.431769 0.410437 0.065675 0.501961 0.505882 0.517647 Xa(C=0 M=0 Y=0 K=60)Pc0.454841 0.363958 0.351537 0.014527 0.572549 0.580392 0.592157 Xa(C=0 M=0 Y=0 K=50)Pc0.367559 0.287694 0.276036 0.000031 0.65098 0.658824 0.670588 Xa(C=0 M=0 Y=0 K=40)Pc0.268681 0.203189 0.199283 0.000031 0.733333 0.741176 0.74902 Xa(C=0 M=0 Y=0 K=30)Pc0.174166 0.123781 0.126894 0.000031 0.815686 0.823529 0.827451 Xa(C=0 M=0 Y=0 K=20)Pc0.08426 0.057374 0.057435 0.000031 0.901961 0.905882 0.909804 Xa(C=0 M=0 Y=0 K=10)Pc0.039734 0.02884 0.023896 0.000031 0.945098 0.945098 0.94902 Xa(C=0 M=0 Y=0 K=5)Pc0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa(C=0 M=100 Y=100 K=0)Pc0.005646 0.744991 0.988983 0.000427 0.945098 0.396078 0.133333 Xa(C=0 M=75 Y=100 K=0)Pc0.016846 0.093446 0.972717 0.000031 1 0.866667 0.082353 Xa(C=0 M=10 Y=95 K=0)Pc0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa(C=85 M=10 Y=100 K=0)Pc0.994598 0.874296 0.035157 0.001648 0.133333 0.25098 0.6 Xa(C=100 M=90 Y=0 K=0)Pc0.594995 0.897002 0.007355 0.000244 0.498039 0.247059 0.592157 Xa(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 A0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa0 J 0 j 1 w 4 M []0 d0 XR15.9072 14.1196 m15.9072 18.6499 L12.8906 18.6499 L12.8906 14.1196 L10.3062 14.1196 L14.3994 10.0615 L18.4922 14.1196 L15.9072 14.1196 LfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF